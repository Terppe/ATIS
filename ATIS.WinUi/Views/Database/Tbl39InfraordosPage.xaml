<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<Page
    x:Class="ATIS.WinUi.Views.Database.Tbl39InfraordosPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ATIS.WinUi.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:ATIS.WinUi.Helpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:drawing="using:System.Drawing"
    xmlns:helpers="using:ATIS.WinUi.Helpers"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Background="Transparent"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">


    <!--  InfraordosPage.xaml  Skriptdatum: 31.03.2023  10:32  -->


    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />

        <MenuFlyout x:Key="ContextMenuSubordo">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Subordo" Command="{x:Bind ViewModel.SaveSubordoCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Subordo" Command="{x:Bind ViewModel.RefreshSubordoServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuInfraordo">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Infraordo" Command="{x:Bind ViewModel.SaveInfraordoCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Infraordo" Command="{x:Bind ViewModel.AddInfraordoCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Infraordo" Command="{x:Bind ViewModel.CopyInfraordoCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Infraordo" Command="{x:Bind ViewModel.DeleteInfraordoCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Infraordo" Command="{x:Bind ViewModel.RefreshInfraordoServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuSuperfamily">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Superfamily" Command="{x:Bind ViewModel.SaveSuperfamilyCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Superfamily" Command="{x:Bind ViewModel.AddSuperfamilyCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Superfamily" Command="{x:Bind ViewModel.CopySuperfamilyCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Superfamily" Command="{x:Bind ViewModel.DeleteSuperfamilyCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Superfamily" Command="{x:Bind ViewModel.RefreshSuperfamilyServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceExpert">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Expert" Command="{x:Bind ViewModel.SaveReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Expert" Command="{x:Bind ViewModel.AddReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Expert" Command="{x:Bind ViewModel.CopyReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Expert" Command="{x:Bind ViewModel.DeleteReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Expert" Command="{x:Bind ViewModel.RefreshReferenceExpertServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceSource">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Source" Command="{x:Bind ViewModel.SaveReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Source" Command="{x:Bind ViewModel.AddReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Source" Command="{x:Bind ViewModel.CopyReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Source" Command="{x:Bind ViewModel.DeleteReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Source" Command="{x:Bind ViewModel.RefreshReferenceSourceServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceAuthor">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Author" Command="{x:Bind ViewModel.SaveReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Author" Command="{x:Bind ViewModel.AddReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Author" Command="{x:Bind ViewModel.CopyReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Author" Command="{x:Bind ViewModel.DeleteReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Author" Command="{x:Bind ViewModel.RefreshReferenceAuthorServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuComment">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Comment" Command="{x:Bind ViewModel.SaveCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Comment" Command="{x:Bind ViewModel.AddCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Comment" Command="{x:Bind ViewModel.CopyCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Comment" Command="{x:Bind ViewModel.DeleteCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Comment" Command="{x:Bind ViewModel.RefreshCommentServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Page.Resources>

    <Grid x:Name="InfraordoMainRoot">

        <TabView
            x:Name="InfraordoTabView"
            Background="LightSkyBlue"
            IsAddTabButtonVisible="False"
            SelectedIndex="{x:Bind ViewModel.SelectedMainDetailTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionChanged="TabView_OnSelectionChanged">
            <TabView.TabItems>

                <!--  Part 2   FK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Subordos" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowLeft.png" />
                    </TabViewItem.IconSource>

                    <RelativePanel x:Name="SubordoLayoutRoot">
                        <TextBlock
                            x:Name="SubordoDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="SubordoDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="SubordoDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.SubordoDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="SubordoCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="SubordoDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveSubordoCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.SubordoCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.SubordoStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="SubordoDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <ListView
                                x:Name="Tbl36SubordosListView"
                                ItemsSource="{x:Bind ViewModel.SubordoItems}"
                                SelectedItem="{x:Bind ViewModel.SubordoSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />

                            <ScrollViewer
                                x:Name="DetailPanelSubordo"
                                Height="Auto"
                                Margin="0,5,0,0"
                                ContextFlyout="{StaticResource ContextMenuSubordo}"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="SubordoDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="SubordoId"
                                        x:Uid="TextBox_SubordoId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.SubordoSelected.SubordoId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SubordoName"
                                        x:Uid="TextBox_SubordoName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="SubordoId"
                                        Text="{x:Bind ViewModel.SubordoSelected.SubordoName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <ComboBox
                                        x:Name="OrdoCombo"
                                        x:Uid="ComboBox_OrdoName"
                                        MinWidth="200"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        DisplayMemberPath="OrdoName"
                                        ItemsSource="{x:Bind ViewModel.Tbl33OrdosAllList}"
                                        RelativePanel.RightOf="SubordoName"
                                        SelectedValue="{x:Bind ViewModel.SubordoSelected.OrdoId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="OrdoId" />
                                    <CheckBox
                                        x:Name="ValidCheckSubordo"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.SubordoSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="OrdoCombo" />

                                    <TextBox
                                        x:Name="ValidYearTextSubordo"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckSubordo"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.SubordoSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextSubordo"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SubordoId"
                                        Text="{x:Bind ViewModel.SubordoSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextSubordo"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SubordoId"
                                        RelativePanel.RightOf="AuthorTextSubordo"
                                        Text="{x:Bind ViewModel.SubordoSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoSubordo"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextSubordo"
                                        Text="{x:Bind ViewModel.SubordoSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymSubordo"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoSubordo"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SubordoSelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                    <TextBox
                                        x:Name="EngNameSubordo"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymSubordo"
                                        Text="{x:Bind ViewModel.SubordoSelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameSubordo"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSubordo"
                                        RelativePanel.RightOf="EngNameSubordo"
                                        Text="{x:Bind ViewModel.SubordoSelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameSubordo"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSubordo"
                                        RelativePanel.RightOf="GerNameSubordo"
                                        Text="{x:Bind ViewModel.SubordoSelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameSubordo"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSubordo"
                                        RelativePanel.RightOf="FraNameSubordo"
                                        Text="{x:Bind ViewModel.SubordoSelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoSubordo"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameSubordo"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SubordoSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SubordoCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>


                <!--  Part 2  FK2    aktuell  -->



                <!--  Part 2  FK3    aktuell  -->

                <!--  Part 2  FK4    aktuell  -->

                <!--  Part 2  Main   aktuell  -->


                <TabViewItem x:Uid="TabViewItem_Infraordos" IsClosable="False">
                    <RelativePanel x:Name="InfraordoLayoutRoot">
                        <TextBlock
                            x:Name="InfraordoDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="InfraordoDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="InfraordoDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.InfraordoDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="InfraordoCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.LeftOf="InfraordoSearchAutoSuggestBox"
                            RelativePanel.RightOf="InfraordoDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveInfraordoCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteInfraordoCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.InfraordoSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.InfraordoCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.InfraordoStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewInfraordo), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddInfraordoCommand}"
                                ToolTipService.ToolTip="New Infraordo">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyInfraordoCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.InfraordoSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshInfraordoServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <AutoSuggestBox
                            Name="InfraordoSearchAutoSuggestBox"
                            x:Uid="AutoSuggestBox_Search"
                            Width="250"
                            Margin="{StaticResource XSmallLeftTopRightMargin}"
                            CornerRadius="2"
                            Loaded="InfraordoSearchAutoSuggestBox_OnLoaded"
                            RelativePanel.AlignRightWithPanel="True"
                            Text="{x:Bind ViewModel.SearchInfraordoName, Mode=TwoWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetInfraordosByNameOrIdCommand, Mode=OneWay}" InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.QueryIcon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Search.png" />
                            </AutoSuggestBox.QueryIcon>
                        </AutoSuggestBox>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="InfraordoDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="InfraordoDatagrid"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                CanUserSortColumns="True"
                                ContextFlyout="{StaticResource ContextMenuInfraordo}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.InfraordoItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.InfraordoSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_InfraordoId"
                                        Binding="{Binding InfraordoId}"
                                        CanUserSort="False"
                                        Tag="InfraordoId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_InfraordoName"
                                        Binding="{Binding InfraordoName}"
                                        CanUserSort="True"
                                        Tag="InfraordoName" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_SubordoName"
                                        Binding="{Binding SubordoId}"
                                        DisplayMemberPath="SubordoName"
                                        ItemsSource="{x:Bind ViewModel.Tbl36SubordosAllList, Mode=OneWay}" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />

                            <ScrollViewer
                                x:Name="DetailPanelInfraordo"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="InfraordoDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="InfraordoId"
                                        x:Uid="TextBox_InfraordoId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.InfraordoSelected.InfraordoId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfraordoName"
                                        x:Uid="TextBox_InfraordoName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="InfraordoId"
                                        Text="{x:Bind ViewModel.InfraordoSelected.InfraordoName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="SubordoCombo"
                                        x:Uid="ComboBox_SubordoName"
                                        MinWidth="200"
                                        Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                        DisplayMemberPath="SubordoName"
                                        ItemsSource="{x:Bind ViewModel.Tbl36SubordosAllList}"
                                        RelativePanel.RightOf="InfraordoName"
                                        SelectedValue="{x:Bind ViewModel.InfraordoSelected.SubordoId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="SubordoId" />
                                    <CheckBox
                                        x:Name="ValidCheckInfraordo"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.InfraordoSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="SubordoCombo" />
                                    <TextBox
                                        x:Name="ValidYearTextInfraordo"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckInfraordo"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.InfraordoSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextInfraordo"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfraordoName"
                                        Text="{x:Bind ViewModel.InfraordoSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextInfraordo"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="InfraordoName"
                                        RelativePanel.RightOf="AuthorTextInfraordo"
                                        Text="{x:Bind ViewModel.InfraordoSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoInfraordo"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextInfraordo"
                                        Text="{x:Bind ViewModel.InfraordoSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymInfraordo"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoInfraordo"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.InfraordoSelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                    <TextBox
                                        x:Name="EngNameInfraordo"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymInfraordo"
                                        Text="{x:Bind ViewModel.InfraordoSelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameInfraordo"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymInfraordo"
                                        RelativePanel.RightOf="EngNameInfraordo"
                                        Text="{x:Bind ViewModel.InfraordoSelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameInfraordo"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymInfraordo"
                                        RelativePanel.RightOf="GerNameInfraordo"
                                        Text="{x:Bind ViewModel.InfraordoSelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameInfraordo"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymInfraordo"
                                        RelativePanel.RightOf="FraNameInfraordo"
                                        Text="{x:Bind ViewModel.InfraordoSelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoInfraordo"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameInfraordo"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.InfraordoSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="InfraordoCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2   FK3  aktuell  -->

                <!--  Part 2  FK4  aktuell  -->

                <!--  Part 4  TK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Superfamilies" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="SuperfamilyLayoutRoot">
                        <TextBlock
                            x:Name="SuperfamilyDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="SuperfamilyDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="SuperfamilyDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.SuperfamilyDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="SuperfamilyCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="SuperfamilyDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveSuperfamilyCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteSuperfamilyCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.SuperfamilySelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.SuperfamilyCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.SuperfamilyStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewSuperfamily), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddSuperfamilyCommand}"
                                ToolTipService.ToolTip="New Superfamily">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopySuperfamilyCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.SuperfamilySelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshSuperfamilyServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="SuperfamilyDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridSuperfamily"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuSuperfamily}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.SuperfamilyItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.SuperfamilySelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_SuperfamilyId"
                                        Binding="{Binding SuperfamilyId}"
                                        CanUserSort="False"
                                        Tag="SuperfamilyId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_SuperfamilyName"
                                        Binding="{Binding SuperfamilyName}"
                                        CanUserSort="True"
                                        Tag="SuperfamilyName" />
                                    <!--<controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_InfraordoName"
                                        Binding="{Binding InfraordoId}"
                                        DisplayMemberPath="InfraordoName"
                                        ItemsSource="{x:Bind ViewModel.Tbl39InfraordosAllList, Mode=OneWay}" />-->
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallLeftMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelSuperfamily"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="SuperfamilyDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="SuperfamilyId"
                                        x:Uid="TextBox_SuperfamilyId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.SuperfamilyId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SuperfamilyName"
                                        x:Uid="TextBox_SuperfamilyName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="SuperfamilyId"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.SuperfamilyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="InfraordoCombo"
                                        x:Uid="ComboBox_InfraordoName"
                                        MinWidth="200"
                                        Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                        DisplayMemberPath="InfraordoName"
                                        ItemsSource="{x:Bind ViewModel.Tbl39InfraordosAllList}"
                                        RelativePanel.RightOf="SuperfamilyName"
                                        SelectedValue="{x:Bind ViewModel.SuperfamilySelected.InfraordoId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="InfraordoId" />
                                    <CheckBox
                                        x:Name="ValidCheckSuperfamily"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.SuperfamilySelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="InfraordoCombo" />
                                    <TextBox
                                        x:Name="ValidYearTextSuperfamily"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckSuperfamily"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextSuperfamily"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SuperfamilyId"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextSuperfamily"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SuperfamilyId"
                                        RelativePanel.RightOf="AuthorTextSuperfamily"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoSuperfamily"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextSuperfamily"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymSuperfamily"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoSuperfamily"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                    <TextBox
                                        x:Name="EngNameSuperfamily"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymSuperfamily"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameSuperfamily"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSuperfamily"
                                        RelativePanel.RightOf="EngNameSuperfamily"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameSuperfamily"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSuperfamily"
                                        RelativePanel.RightOf="GerNameSuperfamily"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameSuperfamily"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSuperfamily"
                                        RelativePanel.RightOf="FraNameSuperfamily"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoSuperfamily"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameSuperfamily"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SuperfamilySelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SuperfamilyCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 4   TK2  aktuell  -->


                <!--  Part 4   TK3  aktuell  -->



                <!--  Part 4   TK4  aktuell  -->



                <!--  Part 7  -->


                <TabViewItem x:Uid="TabViewItem_References" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <TabView
                        Background="DarkGray"
                        IsAddTabButtonVisible="False"
                        SelectedIndex="{x:Bind ViewModel.SelectedMainDetailRefTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TabView.TabItems>

                            <TabViewItem x:Uid="TabViewItem_Ref_Experts" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceExpertLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceExpertDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceExpertDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceExpertDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceExpertDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceExpertCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceExpertDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceExpertCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceExpertCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceExpertSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceExpertCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceExpertStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceExpert), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceExpertCommand}"
                                            ToolTipService.ToolTip="New Reference Expert">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceExpertCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceExpertSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceExpertServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceExpertDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceExpert"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceExpert}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceExpertItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceExpertSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefExpertName"
                                                    Binding="{Binding RefExpertId}"
                                                    DisplayMemberPath="RefExpertName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90ExpertsAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceExpert"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceExpertDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdExpert"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceExpertId"
                                                    x:Uid="TextBox_ReferenceExpertId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdExpert"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.RefExpertId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceExpertCombo"
                                                    x:Uid="ComboBox_RefExpertName"
                                                    MinWidth="200"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefExpertName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90ExpertsAllList}"
                                                    RelativePanel.RightOf="ReferenceExpertId"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceExpertSelected.RefExpertId), BindBack=ViewModel.ReferenceExpertSelected.SetRefExpertId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefExpertId" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceExpert"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceExpertSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceExpertCombo" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceExpert"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceExpert"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="InfoReferenceExpert"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdExpert"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceExpert"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceExpert"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceExpertCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>

                            <TabViewItem x:Uid="TabViewItem_Ref_Sources" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceSourceLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceSourceDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceSourceDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceSourceDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceSourceDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceSourceCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceSourceDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceSourceCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceSourceCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceSourceSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceSourceCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceSourceStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceSource), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceSourceCommand}"
                                            ToolTipService.ToolTip="New Reference Source">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceSourceCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceSourceSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceSourceServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceSourceDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceSource"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceSource}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceSourceItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceSourceSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefSourceName"
                                                    Binding="{Binding RefSourceId}"
                                                    DisplayMemberPath="RefSourceName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90SourcesAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceSource"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceSourceDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdSource"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceSourceId"
                                                    x:Uid="TextBox_ReferenceSourceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdSource"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.RefSourceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceSource"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceSourceSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceSourceId" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceSource"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    CornerRadius="3"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceSource"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceSourceCombo"
                                                    x:Uid="ComboBox_RefSourceName"
                                                    MinWidth="500"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefSourceName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90SourcesAllList}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdSource"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceSourceSelected.RefSourceId), BindBack=ViewModel.ReferenceSourceSelected.SetRefSourceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefSourceId" />
                                                <TextBox
                                                    x:Name="InfoReferenceSource"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceSourceCombo"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceSource"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceSource"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceSourceCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>

                            <TabViewItem x:Uid="TabViewItem_Ref_Authors" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceAuthorLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceAuthorDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceAuthorDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceAuthorDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceAuthorDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceAuthorCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceAuthorDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceAuthorCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceAuthorCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceAuthorSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceAuthorCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceAuthorStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceAuthor), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceAuthorCommand}"
                                            ToolTipService.ToolTip="New Reference Author">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceAuthorCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceAuthorSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceAuthorServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceAuthorDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceAuthor"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceAuthor}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceAuthorItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceAuthorSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefAuthorName"
                                                    MaxWidth="800"
                                                    Binding="{Binding RefAuthorId}"
                                                    DisplayMemberPath="RefAuthorName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90AuthorsAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceAuthor"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceAuthorDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdAuthor"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceAuthorId"
                                                    x:Uid="TextBox_ReferenceAuthorId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdAuthor"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.RefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceAuthor"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceAuthorSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceAuthorId" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceAuthor"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    CornerRadius="3"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceAuthor"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceAuthorCombo"
                                                    x:Uid="ComboBox_RefAuthorName"
                                                    MinWidth="800"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefAuthorName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90AuthorsAllList}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdAuthor"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceAuthorSelected.RefAuthorId), BindBack=ViewModel.ReferenceAuthorSelected.SetRefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefAuthorId" />
                                                <TextBox
                                                    x:Name="InfoReferenceAuthor"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceAuthorCombo"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceAuthor"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceAuthor"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceAuthorCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>
                        </TabView.TabItems>
                    </TabView>
                </TabViewItem>

                <TabViewItem x:Uid="TabViewItem_Comments" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="CommentLayoutRoot">
                        <TextBlock
                            x:Name="CommentDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="CommentDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="CommentDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.CommentDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="CommentCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="CommentDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveCommentCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteCommentCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.CommentSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.CommentCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.CommentStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewComment), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddCommentCommand}"
                                ToolTipService.ToolTip="New Comment">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyCommentCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.CommentSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshCommentServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="CommentDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridComment"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuComment}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.CommentItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.CommentSelected, Mode=TwoWay}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_CommentId"
                                        Binding="{Binding CommentId}"
                                        CanUserSort="False"
                                        Tag="CommentId" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Info"
                                        Binding="{Binding Info}"
                                        Tag="Info" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelComment"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="CommentDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="CommentId"
                                        x:Uid="TextBox_CommentId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.CommentSelected.CommentId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox
                                        x:Name="ValidCheckComment"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.CommentSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="CommentId" />
                                    <TextBox
                                        x:Name="ValidYearTextComment"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckComment"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.CommentSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoComment"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="ValidYearTextComment"
                                        Text="{x:Bind ViewModel.CommentSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoComment"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoComment"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.CommentSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="CommentCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>
            </TabView.TabItems>
        </TabView>
    </Grid>
</Page>

