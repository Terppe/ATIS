<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<Page
    x:Class="ATIS.WinUi.Views.Database.Tbl66GenussesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ATIS.WinUi.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:ATIS.WinUi.Helpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:drawing="using:System.Drawing"
    xmlns:helpers="using:ATIS.WinUi.Helpers"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Background="Transparent"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">


    <!--  GenussesPage.xaml  Skriptdatum: 01.04.2023  10:32  -->


    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />
        <converters:IntToStringConverter x:Key="IntConverter" />
        <converters:DoubleToStringConverter x:Key="DoubleConverter" />

        <MenuFlyout x:Key="ContextMenuInfratribus">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Infratribus" Command="{x:Bind ViewModel.SaveInfratribusCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Infratribus" Command="{x:Bind ViewModel.RefreshInfratribusServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuGenus">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Genus" Command="{x:Bind ViewModel.SaveGenusCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Genus" Command="{x:Bind ViewModel.AddGenusCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Genus" Command="{x:Bind ViewModel.CopyGenusCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Genus" Command="{x:Bind ViewModel.DeleteGenusCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Genus" Command="{x:Bind ViewModel.RefreshGenusServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuFiSpecies">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_FiSpecies" Command="{x:Bind ViewModel.SaveFiSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_FiSpecies" Command="{x:Bind ViewModel.AddFiSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_FiSpecies" Command="{x:Bind ViewModel.CopyFiSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_FiSpecies" Command="{x:Bind ViewModel.DeleteFiSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_FiSpecies" Command="{x:Bind ViewModel.RefreshFiSpeciesServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuPlSpecies">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_PlSpecies" Command="{x:Bind ViewModel.SavePlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_PlSpecies" Command="{x:Bind ViewModel.AddPlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_PlSpecies" Command="{x:Bind ViewModel.CopyPlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_PlSpecies" Command="{x:Bind ViewModel.DeletePlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_PlSpecies" Command="{x:Bind ViewModel.RefreshPlSpeciesServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceExpert">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Expert" Command="{x:Bind ViewModel.SaveReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Expert" Command="{x:Bind ViewModel.AddReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Expert" Command="{x:Bind ViewModel.CopyReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Expert" Command="{x:Bind ViewModel.DeleteReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Expert" Command="{x:Bind ViewModel.RefreshReferenceExpertServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceSource">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Source" Command="{x:Bind ViewModel.SaveReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Source" Command="{x:Bind ViewModel.AddReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Source" Command="{x:Bind ViewModel.CopyReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Source" Command="{x:Bind ViewModel.DeleteReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Source" Command="{x:Bind ViewModel.RefreshReferenceSourceServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceAuthor">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Author" Command="{x:Bind ViewModel.SaveReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Author" Command="{x:Bind ViewModel.AddReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Author" Command="{x:Bind ViewModel.CopyReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Author" Command="{x:Bind ViewModel.DeleteReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Author" Command="{x:Bind ViewModel.RefreshReferenceAuthorServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuComment">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Comment" Command="{x:Bind ViewModel.SaveCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Comment" Command="{x:Bind ViewModel.AddCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Comment" Command="{x:Bind ViewModel.CopyCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Comment" Command="{x:Bind ViewModel.DeleteCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Comment" Command="{x:Bind ViewModel.RefreshCommentServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Page.Resources>

    <Grid x:Name="GenusMainRoot">

        <TabView
            x:Name="GenusTabView"
            Background="LightSkyBlue"
            IsAddTabButtonVisible="False"
            SelectedIndex="{x:Bind ViewModel.SelectedMainDetailTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionChanged="TabView_OnSelectionChanged">
            <TabView.TabItems>

                <!--  Part 2   FK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Infratribusses" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowLeft.png" />
                    </TabViewItem.IconSource>

                    <RelativePanel x:Name="InfratribusLayoutRoot">
                        <TextBlock
                            x:Name="InfratribusDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="InfratribusDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="InfratribusDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.InfratribusDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="InfratribusCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="InfratribusDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveInfratribusCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.InfratribusCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.InfratribusStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="InfratribusDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <ListView
                                x:Name="Tbl63InfratribussesListView"
                                ItemsSource="{x:Bind ViewModel.InfratribusItems}"
                                SelectedItem="{x:Bind ViewModel.InfratribusSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />

                            <ScrollViewer
                                x:Name="DetailPanelInfratribus"
                                Height="Auto"
                                Margin="0,5,0,0"
                                ContextFlyout="{StaticResource ContextMenuInfratribus}"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="InfratribusDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="InfratribusId"
                                        x:Uid="TextBox_InfratribusId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.InfratribusSelected.InfratribusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfratribusName"
                                        x:Uid="TextBox_InfratribusName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="InfratribusId"
                                        Text="{x:Bind ViewModel.InfratribusSelected.InfratribusName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <ComboBox
                                        x:Name="SubtribusCombo"
                                        x:Uid="ComboBox_SubtribusName"
                                        MinWidth="200"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        DisplayMemberPath="SubtribusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl60SubtribussesAllList}"
                                        RelativePanel.RightOf="InfratribusName"
                                        SelectedValue="{x:Bind ViewModel.InfratribusSelected.SubtribusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="SubtribusId" />
                                    <CheckBox
                                        x:Name="ValidCheckInfratribus"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.InfratribusSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="SubtribusCombo" />

                                    <TextBox
                                        x:Name="ValidYearTextInfratribus"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckInfratribus"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.InfratribusSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextInfratribus"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfratribusId"
                                        Text="{x:Bind ViewModel.InfratribusSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextInfratribus"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="InfratribusId"
                                        RelativePanel.RightOf="AuthorTextInfratribus"
                                        Text="{x:Bind ViewModel.InfratribusSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoInfratribus"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextInfratribus"
                                        Text="{x:Bind ViewModel.InfratribusSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymInfratribus"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoInfratribus"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.InfratribusSelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                    <TextBox
                                        x:Name="EngNameInfratribus"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymInfratribus"
                                        Text="{x:Bind ViewModel.InfratribusSelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameInfratribus"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymInfratribus"
                                        RelativePanel.RightOf="EngNameInfratribus"
                                        Text="{x:Bind ViewModel.InfratribusSelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameInfratribus"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymInfratribus"
                                        RelativePanel.RightOf="GerNameInfratribus"
                                        Text="{x:Bind ViewModel.InfratribusSelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameInfratribus"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymInfratribus"
                                        RelativePanel.RightOf="FraNameInfratribus"
                                        Text="{x:Bind ViewModel.InfratribusSelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoInfratribus"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameInfratribus"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.InfratribusSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="InfratribusCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>


                <!--  Part 2  FK2    aktuell  -->



                <!--  Part 2  FK3    aktuell  -->

                <!--  Part 2  FK4    aktuell  -->

                <!--  Part 2  Main   aktuell  -->


                <TabViewItem x:Uid="TabViewItem_Genusses" IsClosable="False">
                    <RelativePanel x:Name="GenusLayoutRoot">
                        <TextBlock
                            x:Name="GenusDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="GenusDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="GenusDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.GenusDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="GenusCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.LeftOf="GenusSearchAutoSuggestBox"
                            RelativePanel.RightOf="GenusDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveGenusCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteGenusCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.GenusSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.GenusCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.GenusStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewGenus), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddGenusCommand}"
                                ToolTipService.ToolTip="New Genus">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyGenusCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.GenusSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshGenusServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <AutoSuggestBox
                            Name="GenusSearchAutoSuggestBox"
                            x:Uid="AutoSuggestBox_Search"
                            Width="250"
                            Margin="{StaticResource XSmallLeftTopRightMargin}"
                            CornerRadius="2"
                            Loaded="GenusSearchAutoSuggestBox_OnLoaded"
                            RelativePanel.AlignRightWithPanel="True"
                            Text="{x:Bind ViewModel.SearchGenusName, Mode=TwoWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetGenussesByNameOrIdCommand, Mode=OneWay}" InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.QueryIcon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Search.png" />
                            </AutoSuggestBox.QueryIcon>
                        </AutoSuggestBox>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="GenusDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="GenusDatagrid"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                CanUserSortColumns="True"
                                ContextFlyout="{StaticResource ContextMenuGenus}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.GenusItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.GenusSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_GenusId"
                                        Binding="{Binding GenusId}"
                                        CanUserSort="False"
                                        Tag="GenusId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_GenusName"
                                        Binding="{Binding GenusName}"
                                        CanUserSort="True"
                                        Tag="GenusName" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_InfratribusName"
                                        Binding="{Binding InfratribusId}"
                                        DisplayMemberPath="InfratribusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl63InfratribussesAllList, Mode=OneWay}" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />

                            <ScrollViewer
                                x:Name="DetailPanelGenus"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="GenusDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="GenusId"
                                        x:Uid="TextBox_GenusId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.GenusSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GenusName"
                                        x:Uid="TextBox_GenusName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="GenusId"
                                        Text="{x:Bind ViewModel.GenusSelected.GenusName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="InfratribusCombo"
                                        x:Uid="ComboBox_InfratribusName"
                                        MinWidth="200"
                                        Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                        DisplayMemberPath="InfratribusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl63InfratribussesAllList}"
                                        RelativePanel.RightOf="GenusName"
                                        SelectedValue="{x:Bind ViewModel.GenusSelected.InfratribusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="InfratribusId" />
                                    <CheckBox
                                        x:Name="ValidCheckGenus"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.GenusSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="InfratribusCombo" />
                                    <TextBox
                                        x:Name="ValidYearTextGenus"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckGenus"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.GenusSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextGenus"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="GenusName"
                                        Text="{x:Bind ViewModel.GenusSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextGenus"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="GenusName"
                                        RelativePanel.RightOf="AuthorTextGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoGenus"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymGenus"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoGenus"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.GenusSelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                    <TextBox
                                        x:Name="EngNameGenus"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameGenus"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymGenus"
                                        RelativePanel.RightOf="EngNameGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameGenus"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymGenus"
                                        RelativePanel.RightOf="GerNameGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameGenus"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymGenus"
                                        RelativePanel.RightOf="FraNameGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoGenus"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameGenus"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.GenusSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="GenusCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2   FK3  aktuell  -->

                <!--  Part 2  FK4  aktuell  -->

                <!--  Part 4  TK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_FiSpeciesses" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="FiSpeciesLayoutRoot">
                        <TextBlock
                            x:Name="FiSpeciesDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="FiSpeciesDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="FiSpeciesDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.FiSpeciesDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="FiSpeciesCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="FiSpeciesDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveFiSpeciesCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteFiSpeciesCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.FiSpeciesSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.FiSpeciesCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.FiSpeciesStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewFiSpecies), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddFiSpeciesCommand}"
                                ToolTipService.ToolTip="New FiSpecies">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyFiSpeciesCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.FiSpeciesSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshFiSpeciesServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="FiSpeciesDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridFiSpecies"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuFiSpecies}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.FiSpeciesItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.FiSpeciesSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_FiSpeciesId"
                                        Binding="{Binding FiSpeciesId}"
                                        CanUserSort="False"
                                        Tag="FiSpeciesId" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_GenusName"
                                        Binding="{Binding GenusId}"
                                        DisplayMemberPath="GenusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList, Mode=OneWay}" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_FiSpeciesName"
                                        Binding="{Binding FiSpeciesName}"
                                        CanUserSort="True"
                                        Tag="FiSpeciesName" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Subspecies"
                                        Binding="{Binding Subspecies}"
                                        CanUserSort="True"
                                        Tag="Subspecies" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Divers"
                                        Binding="{Binding Divers}"
                                        CanUserSort="True"
                                        Tag="Divers" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_SpeciesgroupName"
                                        Binding="{Binding SpeciesgroupId}"
                                        DisplayMemberPath="SpeciesgroupFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList, Mode=OneWay}" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelFiSpecies"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="FiSpeciesDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderFiSpecies" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.FiSpeciesSelected.FiSpeciesFullName, Mode=OneWay}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="FiSpeciesId"
                                                x:Uid="TextBox_FiSpeciesId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.FiSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="GenusCombo"
                                                x:Uid="ComboBox_GenusName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                DisplayMemberPath="GenusName"
                                                ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList}"
                                                RelativePanel.RightOf="FiSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.FiSpeciesSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="GenusId" />
                                            <TextBox
                                                x:Name="FiSpeciesName"
                                                x:Uid="TextBox_FiSpeciesName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="GenusCombo"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.FiSpeciesName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FiSpeciesSubspecies"
                                                x:Uid="TextBox_Subspecies"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FiSpeciesName"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Subspecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FiSpeciesDivers"
                                                x:Uid="TextBox_Divers"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FiSpeciesSubspecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Divers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SpeciesgroupCombo"
                                                x:Uid="ComboBox_SpeciesgroupFullName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                DisplayMemberPath="SpeciesgroupFullName"
                                                ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="FiSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.FiSpeciesSelected.SpeciesgroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="SpeciesgroupId" />
                                            <CheckBox
                                                x:Name="ValidCheckFiSpecies"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="FiSpeciesId"
                                                RelativePanel.RightOf="SpeciesgroupCombo" />
                                            <TextBox
                                                x:Name="ValidYearTextFiSpecies"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="FiSpeciesId"
                                                RelativePanel.RightOf="ValidCheckFiSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecificationExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Specification" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="AuthorTextFiSpecies"
                                                x:Uid="TextBox_Author"
                                                Width="670"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                CharacterCasing="Upper"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AuthorYearTextFiSpecies"
                                                x:Uid="TextBox_AuthorYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FishLengthTextFiSpecies"
                                                x:Uid="TextBox_FishLength"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorYearTextFiSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.FishLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BasinLengthTextFiSpecies"
                                                x:Uid="TextBox_BasinLength"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FishLengthTextFiSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.BasinLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImporterTextFiSpecies"
                                                x:Uid="TextBox_Importer"
                                                Width="1020"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AuthorTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Importer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImportingYearTextFiSpecies"
                                                x:Uid="TextBox_ImportingYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="AuthorTextFiSpecies"
                                                RelativePanel.RightOf="ImporterTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.ImportingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="TradeNameFiSpecies"
                                                x:Uid="TextBox_TradeName"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ImporterTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.TradeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoSpeciesFiSpecies"
                                                x:Uid="TextBox_MemoSpecies"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TradeNameFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoSpecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="FoodExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Food" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="KarnivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Karnivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Karnivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="HerbivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Herbivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Herbivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="KarnivoreCheckFiSpecies" />
                                            <CheckBox
                                                x:Name="LimnivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Limnivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Limnivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="HerbivoreCheckFiSpecies" />
                                            <CheckBox
                                                x:Name="OmnivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Omnivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Omnivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="LimnivoreCheckFiSpecies" />
                                            <TextBox
                                                x:Name="MemoFoodsFiSpecies"
                                                x:Uid="TextBox_MemoFoods"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="OmnivoreCheckFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoFoods, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="TechnikExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Technik" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="Difficult1CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult1"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="Difficult2CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult2"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult1CheckFiSpecies" />
                                            <CheckBox
                                                x:Name="Difficult3CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult3"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult2CheckFiSpecies" />
                                            <CheckBox
                                                x:Name="Difficult4CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult4"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult3CheckFiSpecies" />
                                            <TextBox
                                                x:Name="Ph1TextFiSpecies"
                                                x:Uid="TextBox_Ph1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Ph1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Ph2TextFiSpecies"
                                                x:Uid="TextBox_Ph2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Ph1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Ph2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp1TextFiSpecies"
                                                x:Uid="TextBox_Temp1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Ph2TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Temp1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp2TextFiSpecies"
                                                x:Uid="TextBox_Temp2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Temp1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Temp2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness1TextFiSpecies"
                                                x:Uid="TextBox_Hardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Temp2TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Hardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness2TextFiSpecies"
                                                x:Uid="TextBox_Hardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Hardness1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Hardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness1TextFiSpecies"
                                                x:Uid="TextBox_CarboHardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Hardness2TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.CarboHardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness2TextFiSpecies"
                                                x:Uid="TextBox_CarboHardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="CarboHardness1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.CarboHardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoTechFiSpecies"
                                                x:Uid="TextBox_MemoTech"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Ph1TextFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoTech, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="HusbandryExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Husbandry" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoHusbandryFiSpecies"
                                                x:Uid="TextBox_MemoHusbandry"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoHusbandry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BreedingExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Breeding" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBreedingFiSpecies"
                                                x:Uid="TextBox_MemoBreeding"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoBreeding, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BuiltExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Built" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBuiltFiSpecies"
                                                x:Uid="TextBox_MemoBuilt"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoBuilt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoColorFiSpecies"
                                                x:Uid="TextBox_MemoColor"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoBuiltFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoSozialFiSpecies"
                                                x:Uid="TextBox_MemoSozial"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoColorFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoSozial, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoDomorphismFiSpecies"
                                                x:Uid="TextBox_MemoDomorphism"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoSozialFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoDomorphism, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecialExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Special" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoSpecialFiSpecies"
                                                x:Uid="TextBox_MemoSpecial"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoSpecial, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="FiSpeciesCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewFiSpecies">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderFiSpecies.IsExpanded" Value="True" />
                                        <Setter Target="SpecificationExpanderFiSpecies.IsExpanded" Value="True" />
                                        <Setter Target="FoodExpanderFiSpecies.IsExpanded" Value="False" />
                                        <Setter Target="TechnikExpanderFiSpecies.IsExpanded" Value="False" />
                                        <Setter Target="HusbandryExpanderFiSpecies.IsExpanded" Value="False" />
                                        <Setter Target="BreedingExpanderFiSpecies.IsExpanded" Value="False" />
                                        <Setter Target="BuiltExpanderFiSpecies.IsExpanded" Value="False" />
                                        <Setter Target="SpecialExpanderFiSpecies.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 4   TK2  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_PlSpeciesses" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="PlSpeciesLayoutRoot">
                        <TextBlock
                            x:Name="PlSpeciesDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="PlSpeciesDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="PlSpeciesDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.PlSpeciesDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="PlSpeciesCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="PlSpeciesDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SavePlSpeciesCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeletePlSpeciesCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.FiSpeciesSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.PlSpeciesCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.PlSpeciesStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewPlSpecies), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddPlSpeciesCommand}"
                                ToolTipService.ToolTip="New PlSpecies">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyPlSpeciesCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.PlSpeciesSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshPlSpeciesServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="PlSpeciesDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridPlSpecies"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuPlSpecies}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.PlSpeciesItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.PlSpeciesSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_PlSpeciesId"
                                        Binding="{Binding PlSpeciesId}"
                                        CanUserSort="False"
                                        Tag="PlSpeciesId" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_GenusName"
                                        Binding="{Binding GenusId}"
                                        DisplayMemberPath="GenusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList, Mode=OneWay}" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_PlSpeciesName"
                                        Binding="{Binding PlSpeciesName}"
                                        CanUserSort="True"
                                        Tag="PlSpeciesName" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Subspecies"
                                        Binding="{Binding Subspecies}"
                                        CanUserSort="True"
                                        Tag="Subspecies" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Divers"
                                        Binding="{Binding Divers}"
                                        CanUserSort="True"
                                        Tag="Divers" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_SpeciesgroupName"
                                        Binding="{Binding SpeciesgroupId}"
                                        DisplayMemberPath="SpeciesgroupFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList, Mode=OneWay}" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelPlSpecies"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="PlSpeciesDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderPlSpecies" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesFullName, Mode=OneWay}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="PlSpeciesId"
                                                x:Uid="TextBox_PlSpeciesId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="GenusCombo1"
                                                x:Uid="ComboBox_GenusName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="GenusName"
                                                ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList}"
                                                RelativePanel.RightOf="PlSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.PlSpeciesSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="GenusId" />
                                            <TextBox
                                                x:Name="PlSpeciesName"
                                                x:Uid="TextBox_PlSpeciesName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="GenusCombo1"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlSpeciesSubspecies"
                                                x:Uid="TextBox_Subspecies"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlSpeciesName"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Subspecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlSpeciesDivers"
                                                x:Uid="TextBox_Divers"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlSpeciesSubspecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Divers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SpeciesgroupCombo1"
                                                x:Uid="ComboBox_SpeciesgroupFullName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="SpeciesgroupFullName"
                                                ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="PlSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.PlSpeciesSelected.SpeciesgroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="SpeciesgroupId" />
                                            <CheckBox
                                                x:Name="ValidCheckPlSpecies"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="0,35,-50,0"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="PlSpeciesId"
                                                RelativePanel.RightOf="SpeciesgroupCombo1" />
                                            <TextBox
                                                x:Name="ValidYearTextPlSpecies"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="PlSpeciesId"
                                                RelativePanel.RightOf="ValidCheckPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecificationExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Specification" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="AuthorTextPlSpecies"
                                                x:Uid="TextBox_Author"
                                                Width="670"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                CharacterCasing="Upper"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AuthorYearTextPlSpecies"
                                                x:Uid="TextBox_AuthorYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlantLengthTextPlSpecies"
                                                x:Uid="TextBox_PlantLength"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorYearTextPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlantLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BasinHeightTextPlSpecies"
                                                x:Uid="TextBox_BasinHeight"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlantLengthTextPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.BasinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImporterTextPlSpecies"
                                                x:Uid="TextBox_Importer"
                                                Width="1040"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AuthorTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Importer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImportingYearTextPlSpecies"
                                                x:Uid="TextBox_ImportingYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="AuthorTextPlSpecies"
                                                RelativePanel.RightOf="ImporterTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.ImportingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="TradeNamePlSpecies"
                                                x:Uid="TextBox_TradeName"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ImporterTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.TradeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoSpeciesPlSpecies"
                                                x:Uid="TextBox_MemoSpecies"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TradeNamePlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoSpecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="TechnikExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Technik" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="Difficult1CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult1"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="Difficult2CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult2"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult1CheckPlSpecies" />
                                            <CheckBox
                                                x:Name="Difficult3CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult3"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult2CheckPlSpecies" />
                                            <CheckBox
                                                x:Name="Difficult4CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult4"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult3CheckPlSpecies" />
                                            <TextBox
                                                x:Name="Ph1TextPlSpecies"
                                                x:Uid="TextBox_Ph1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Ph1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Ph2TextPlSpecies"
                                                x:Uid="TextBox_Ph2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Ph1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Ph2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp1TextPlSpecies"
                                                x:Uid="TextBox_Temp1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Ph2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Temp1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp2TextPlSpecies"
                                                x:Uid="TextBox_Temp2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Temp1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Temp2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness1TextPlSpecies"
                                                x:Uid="TextBox_Hardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Temp2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Hardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness2TextPlSpecies"
                                                x:Uid="TextBox_Hardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Hardness1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Hardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness1TextPlSpecies"
                                                x:Uid="TextBox_CarboHardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Hardness2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.CarboHardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness2TextPlSpecies"
                                                x:Uid="TextBox_CarboHardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="CarboHardness1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.CarboHardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoTechPlSpecies"
                                                x:Uid="TextBox_MemoTech"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Ph1TextPlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoTech, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="CultureExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Culture" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoCulturePlSpecies"
                                                x:Uid="TextBox_MemoCulture"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoCulture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="ReproductionExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Reproduction" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoReproductionPlSpecies"
                                                x:Uid="TextBox_MemoReproduction"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoReproduction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BuiltExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Built" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBuiltPlSpecies"
                                                x:Uid="TextBox_MemoBuilt"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoBuilt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoColorPlSpecies"
                                                x:Uid="TextBox_MemoColor"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoBuiltPlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecialExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Special" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoGlobalPlSpecies"
                                                x:Uid="TextBox_MemoGlobal"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoGlobal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="PlSpeciesCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewPlSpecies">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderPlSpecies.IsExpanded" Value="True" />
                                        <Setter Target="SpecificationExpanderPlSpecies.IsExpanded" Value="True" />
                                        <Setter Target="TechnikExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="CultureExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="ReproductionExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="BuiltExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="SpecialExpanderPlSpecies.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>


                <!--  Part 4   TK3  aktuell  -->



                <!--  Part 4   TK4  aktuell  -->



                <!--  Part 7  -->


                <TabViewItem x:Uid="TabViewItem_References" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <TabView
                        Background="DarkGray"
                        IsAddTabButtonVisible="False"
                        SelectedIndex="{x:Bind ViewModel.SelectedMainDetailRefTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TabView.TabItems>

                            <TabViewItem x:Uid="TabViewItem_Ref_Experts" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceExpertLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceExpertDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceExpertDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceExpertDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceExpertDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceExpertCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceExpertDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceExpertCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceExpertCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceExpertSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceExpertCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceExpertStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceExpert), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceExpertCommand}"
                                            ToolTipService.ToolTip="New Reference Expert">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceExpertCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceExpertSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceExpertServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceExpertDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceExpert"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceExpert}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceExpertItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceExpertSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefExpertName"
                                                    Binding="{Binding RefExpertId}"
                                                    DisplayMemberPath="RefExpertName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90ExpertsAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceExpert"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceExpertDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdExpert"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceExpertId"
                                                    x:Uid="TextBox_ReferenceExpertId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdExpert"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.RefExpertId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceExpertCombo"
                                                    x:Uid="ComboBox_RefExpertName"
                                                    MinWidth="200"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefExpertName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90ExpertsAllList}"
                                                    RelativePanel.RightOf="ReferenceExpertId"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceExpertSelected.RefExpertId), BindBack=ViewModel.ReferenceExpertSelected.SetRefExpertId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefExpertId" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceExpert"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceExpertSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceExpertCombo" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceExpert"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceExpert"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="InfoReferenceExpert"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdExpert"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceExpert"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceExpert"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceExpertCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>

                            <TabViewItem x:Uid="TabViewItem_Ref_Sources" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceSourceLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceSourceDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceSourceDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceSourceDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceSourceDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceSourceCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceSourceDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceSourceCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceSourceCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceSourceSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceSourceCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceSourceStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceSource), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceSourceCommand}"
                                            ToolTipService.ToolTip="New Reference Source">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceSourceCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceSourceSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceSourceServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceSourceDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceSource"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceSource}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceSourceItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceSourceSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefSourceName"
                                                    Binding="{Binding RefSourceId}"
                                                    DisplayMemberPath="RefSourceName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90SourcesAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceSource"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceSourceDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdSource"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceSourceId"
                                                    x:Uid="TextBox_ReferenceSourceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdSource"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.RefSourceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceSource"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceSourceSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceSourceId" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceSource"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    CornerRadius="3"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceSource"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceSourceCombo"
                                                    x:Uid="ComboBox_RefSourceName"
                                                    MinWidth="500"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefSourceName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90SourcesAllList}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdSource"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceSourceSelected.RefSourceId), BindBack=ViewModel.ReferenceSourceSelected.SetRefSourceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefSourceId" />
                                                <TextBox
                                                    x:Name="InfoReferenceSource"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceSourceCombo"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceSource"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceSource"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceSourceCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>

                            <TabViewItem x:Uid="TabViewItem_Ref_Authors" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceAuthorLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceAuthorDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceAuthorDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceAuthorDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceAuthorDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceAuthorCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceAuthorDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceAuthorCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceAuthorCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceAuthorSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceAuthorCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceAuthorStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceAuthor), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceAuthorCommand}"
                                            ToolTipService.ToolTip="New Reference Author">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceAuthorCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceAuthorSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceAuthorServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceAuthorDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceAuthor"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceAuthor}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceAuthorItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceAuthorSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefAuthorName"
                                                    MaxWidth="800"
                                                    Binding="{Binding RefAuthorId}"
                                                    DisplayMemberPath="RefAuthorName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90AuthorsAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceAuthor"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceAuthorDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdAuthor"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceAuthorId"
                                                    x:Uid="TextBox_ReferenceAuthorId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdAuthor"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.RefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceAuthor"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceAuthorSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceAuthorId" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceAuthor"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    CornerRadius="3"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceAuthor"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceAuthorCombo"
                                                    x:Uid="ComboBox_RefAuthorName"
                                                    MinWidth="800"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefAuthorName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90AuthorsAllList}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdAuthor"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceAuthorSelected.RefAuthorId), BindBack=ViewModel.ReferenceAuthorSelected.SetRefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefAuthorId" />
                                                <TextBox
                                                    x:Name="InfoReferenceAuthor"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceAuthorCombo"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceAuthor"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceAuthor"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceAuthorCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>
                        </TabView.TabItems>
                    </TabView>
                </TabViewItem>

                <TabViewItem x:Uid="TabViewItem_Comments" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="CommentLayoutRoot">
                        <TextBlock
                            x:Name="CommentDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="CommentDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="CommentDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.CommentDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="CommentCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="CommentDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveCommentCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteCommentCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.CommentSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.CommentCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.CommentStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewComment), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddCommentCommand}"
                                ToolTipService.ToolTip="New Comment">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyCommentCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.CommentSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshCommentServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="CommentDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridComment"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuComment}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.CommentItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.CommentSelected, Mode=TwoWay}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_CommentId"
                                        Binding="{Binding CommentId}"
                                        CanUserSort="False"
                                        Tag="CommentId" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Info"
                                        Binding="{Binding Info}"
                                        Tag="Info" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelComment"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="CommentDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="CommentId"
                                        x:Uid="TextBox_CommentId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.CommentSelected.CommentId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox
                                        x:Name="ValidCheckComment"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.CommentSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="CommentId" />
                                    <TextBox
                                        x:Name="ValidYearTextComment"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckComment"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.CommentSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoComment"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="ValidYearTextComment"
                                        Text="{x:Bind ViewModel.CommentSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoComment"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoComment"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.CommentSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="CommentCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>
            </TabView.TabItems>
        </TabView>
    </Grid>
</Page>

