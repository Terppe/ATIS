<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<Page
    x:Class="ATIS.WinUi.Views.Database.Tbl72PlSpeciessesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ATIS.WinUi.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:ATIS.WinUi.Helpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:drawing="using:System.Drawing"
    xmlns:helpers="using:ATIS.WinUi.Helpers"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Background="Transparent"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">


    <!--  PlSpeciessesPage.xaml  Skriptdatum: 12.04.2023  12:32  -->


    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />
        <converters:IntToStringConverter x:Key="IntConverter" />
        <converters:DoubleToStringConverter x:Key="DoubleConverter" />
        <converters:ImageSourceConverter x:Key="ImageSourceConverter" />
        <converters:DateConverter x:Key="DateConverter" />
        <drawing:ImageConverter x:Key="ImageConverter" />


        <MenuFlyout x:Key="ContextMenuGenus">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Genus" Command="{x:Bind ViewModel.SaveGenusCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Genus" Command="{x:Bind ViewModel.RefreshGenusServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>
        <MenuFlyout x:Key="ContextMenuSpeciesgroup">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Speciesgroup" Command="{x:Bind ViewModel.SaveSpeciesgroupCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Speciesgroup" Command="{x:Bind ViewModel.RefreshSpeciesgroupServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuPlSpecies">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_PlSpecies" Command="{x:Bind ViewModel.SavePlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_PlSpecies" Command="{x:Bind ViewModel.AddPlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_PlSpecies" Command="{x:Bind ViewModel.CopyPlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_PlSpecies" Command="{x:Bind ViewModel.DeletePlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_PlSpecies" Command="{x:Bind ViewModel.RefreshPlSpeciesServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuName">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Name" Command="{x:Bind ViewModel.SaveNameCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Name" Command="{x:Bind ViewModel.AddNameCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Name" Command="{x:Bind ViewModel.CopyNameCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Name" Command="{x:Bind ViewModel.DeleteNameCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Name" Command="{x:Bind ViewModel.RefreshNameServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuImage">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Image" Command="{x:Bind ViewModel.SaveImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Image" Command="{x:Bind ViewModel.AddImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Image" Command="{x:Bind ViewModel.CopyImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Image" Command="{x:Bind ViewModel.DeleteImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Image" Command="{x:Bind ViewModel.RefreshImageServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuSynonym">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Synonym" Command="{x:Bind ViewModel.SaveSynonymCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Synonym" Command="{x:Bind ViewModel.AddSynonymCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Synonym" Command="{x:Bind ViewModel.CopySynonymCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Synonym" Command="{x:Bind ViewModel.DeleteSynonymCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Synonym" Command="{x:Bind ViewModel.RefreshSynonymServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuGeographic">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Geographic" Command="{x:Bind ViewModel.SaveGeographicCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Geographic" Command="{x:Bind ViewModel.AddGeographicCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Geographic" Command="{x:Bind ViewModel.CopyGeographicCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Geographic" Command="{x:Bind ViewModel.DeleteGeographicCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Geographic" Command="{x:Bind ViewModel.RefreshGeographicServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceExpert">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Expert" Command="{x:Bind ViewModel.SaveReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Expert" Command="{x:Bind ViewModel.AddReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Expert" Command="{x:Bind ViewModel.CopyReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Expert" Command="{x:Bind ViewModel.DeleteReferenceExpertCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Expert" Command="{x:Bind ViewModel.RefreshReferenceExpertServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceSource">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Source" Command="{x:Bind ViewModel.SaveReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Source" Command="{x:Bind ViewModel.AddReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Source" Command="{x:Bind ViewModel.CopyReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Source" Command="{x:Bind ViewModel.DeleteReferenceSourceCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Source" Command="{x:Bind ViewModel.RefreshReferenceSourceServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuReferenceAuthor">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Reference_Author" Command="{x:Bind ViewModel.SaveReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Reference_Author" Command="{x:Bind ViewModel.AddReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Reference_Author" Command="{x:Bind ViewModel.CopyReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Reference_Author" Command="{x:Bind ViewModel.DeleteReferenceAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Reference_Author" Command="{x:Bind ViewModel.RefreshReferenceAuthorServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuComment">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Comment" Command="{x:Bind ViewModel.SaveCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Comment" Command="{x:Bind ViewModel.AddCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Comment" Command="{x:Bind ViewModel.CopyCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Comment" Command="{x:Bind ViewModel.DeleteCommentCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Comment" Command="{x:Bind ViewModel.RefreshCommentServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Page.Resources>

    <Grid x:Name="PlSpeciesMainRoot">

        <TabView
            x:Name="PlSpeciesTabView"
            Background="LightSkyBlue"
            IsAddTabButtonVisible="False"
            SelectedIndex="{x:Bind ViewModel.SelectedMainDetailTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionChanged="TabView_OnSelectionChanged">
            <TabView.TabItems>

                <!--  Part 2   FK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Genusses" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowLeft.png" />
                    </TabViewItem.IconSource>

                    <RelativePanel x:Name="GenusLayoutRoot">
                        <TextBlock
                            x:Name="GenusDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="GenusDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="GenusDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.GenusDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="GenusCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="GenusDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveGenusCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.GenusCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.GenusStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="GenusDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <ListView
                                x:Name="Tbl66GenussesListView"
                                ItemsSource="{x:Bind ViewModel.GenusItems}"
                                SelectedItem="{x:Bind ViewModel.GenusSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />
                            <ScrollViewer
                                x:Name="DetailPanelGenus"
                                Height="Auto"
                                Margin="0,5,0,0"
                                ContextFlyout="{StaticResource ContextMenuGenus}"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="GenusDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="GenusId"
                                        x:Uid="TextBox_GenusId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.GenusSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GenusName"
                                        x:Uid="TextBox_GenusName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="GenusId"
                                        Text="{x:Bind ViewModel.GenusSelected.GenusName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <ComboBox
                                        x:Name="InfratribusCombo"
                                        x:Uid="ComboBox_InfratribusName"
                                        MinWidth="200"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        DisplayMemberPath="InfratribusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl63InfratribussesAllList}"
                                        RelativePanel.RightOf="GenusName"
                                        SelectedValue="{x:Bind ViewModel.GenusSelected.InfratribusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="InfratribusId" />
                                    <CheckBox
                                        x:Name="ValidCheckGenus"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.GenusSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="InfratribusCombo" />

                                    <TextBox
                                        x:Name="ValidYearTextGenus"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckGenus"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.GenusSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextGenus"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="GenusId"
                                        Text="{x:Bind ViewModel.GenusSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextGenus"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="GenusId"
                                        RelativePanel.RightOf="AuthorTextGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoGenus"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymGenus"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoGenus"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.GenusSelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                    <TextBox
                                        x:Name="EngNameGenus"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameGenus"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymGenus"
                                        RelativePanel.RightOf="EngNameGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameGenus"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymGenus"
                                        RelativePanel.RightOf="GerNameGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameGenus"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymGenus"
                                        RelativePanel.RightOf="FraNameGenus"
                                        Text="{x:Bind ViewModel.GenusSelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoGenus"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameGenus"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.GenusSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="GenusCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2  FK2    aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Speciesgroups" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowLeft.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="SpeciesgroupLayoutRoot">
                        <TextBlock
                            x:Name="SpeciesgroupDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="SpeciesgroupDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="SpeciesgroupDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.SpeciesgroupDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="SpeciesgroupCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="SpeciesgroupDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveSpeciesgroupCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.SpeciesgroupCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.SpeciesgroupStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="SpeciesgroupDatasetCountText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <ListView
                                x:Name="Tbl68SpeciesgroupsListView"
                                ItemsSource="{x:Bind ViewModel.SpeciesgroupItems}"
                                SelectedItem="{x:Bind ViewModel.SpeciesgroupSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />
                            <ScrollViewer
                                x:Name="DetailPanelSpeciesgroup"
                                Height="Auto"
                                Margin="0,5,0,0"
                                ContextFlyout="{StaticResource ContextMenuSpeciesgroup}"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="SpeciesgroupDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="SpeciesgroupId"
                                        x:Uid="TextBox_SpeciesgroupId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.SpeciesgroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SpeciesgroupName"
                                        x:Uid="TextBox_SpeciesgroupName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="SpeciesgroupId"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.SpeciesgroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SubspeciesgroupName"
                                        x:Uid="TextBox_Subspeciesgroup"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="SpeciesgroupName"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.Subspeciesgroup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox
                                        x:Name="ValidCheckSpeciesgroup"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="0,35,-50,0"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.SpeciesgroupSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="SubspeciesgroupName" />
                                    <TextBox
                                        x:Name="ValidYearTextSpeciesgroup"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckSpeciesgroup"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextSpeciesgroup"
                                        x:Uid="TextBox_Author"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SpeciesgroupId"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextSpeciesgroup"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SpeciesgroupId"
                                        RelativePanel.RightOf="AuthorTextSpeciesgroup"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoSpeciesgroup"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextSpeciesgroup"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymSpeciesgroup"
                                        x:Uid="TextBox_Synonym"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoSpeciesgroup"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.Synonym, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="EngNameSpeciesgroup"
                                        x:Uid="TextBox_EngName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymSpeciesgroup"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.EngName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="GerNameSpeciesgroup"
                                        x:Uid="TextBox_GerName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSpeciesgroup"
                                        RelativePanel.RightOf="EngNameSpeciesgroup"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.GerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="FraNameSpeciesgroup"
                                        x:Uid="TextBox_FraName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSpeciesgroup"
                                        RelativePanel.RightOf="GerNameSpeciesgroup"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.FraName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="PorNameSpeciesgroup"
                                        x:Uid="TextBox_SpaName"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymSpeciesgroup"
                                        RelativePanel.RightOf="FraNameSpeciesgroup"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.PorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoSpeciesgroup"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="EngNameSpeciesgroup"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SpeciesgroupSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SpeciesgroupCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2  FK3    aktuell  -->

                <!--  Part 2  FK4    aktuell  -->

                <!--  Part 2  Main   aktuell  -->

                <TabViewItem x:Uid="TabViewItem_PlSpeciesses" IsClosable="False">
                    <RelativePanel x:Name="PlSpeciesLayoutRoot">
                        <TextBlock
                            x:Name="PlSpeciesDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="PlSpeciesDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="PlSpeciesDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.PlSpeciesDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="PlSpeciesCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.LeftOf="PlSpeciesSearchAutoSuggestBox"
                            RelativePanel.RightOf="PlSpeciesDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SavePlSpeciesCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeletePlSpeciesCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.PlSpeciesSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.PlSpeciesCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.PlSpeciesStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewPlSpecies), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddPlSpeciesCommand}"
                                ToolTipService.ToolTip="New PlSpecies">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyPlSpeciesCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.PlSpeciesSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshPlSpeciesServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <AutoSuggestBox
                            Name="PlSpeciesSearchAutoSuggestBox"
                            x:Uid="AutoSuggestBox_Search"
                            Width="250"
                            Margin="{StaticResource XSmallLeftTopRightMargin}"
                            CornerRadius="2"
                            Loaded="PlSpeciesSearchAutoSuggestBox_OnLoaded"
                            RelativePanel.AlignRightWithPanel="True"
                            Text="{x:Bind ViewModel.SearchPlSpeciesName, Mode=TwoWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetPlSpeciessesByNameOrIdCommand, Mode=OneWay}" InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.QueryIcon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Search.png" />
                            </AutoSuggestBox.QueryIcon>
                        </AutoSuggestBox>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="PlSpeciesDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="PlSpeciesDatagrid"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                CanUserSortColumns="True"
                                ContextFlyout="{StaticResource ContextMenuPlSpecies}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.PlSpeciesItems}"
                                SelectedItem="{x:Bind ViewModel.PlSpeciesSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_PlSpeciesId"
                                        Binding="{Binding PlSpeciesId}"
                                        CanUserSort="False"
                                        Tag="PlSpeciesId" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_GenusName"
                                        Binding="{Binding GenusId}"
                                        DisplayMemberPath="GenusName"
                                        ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList, Mode=OneWay}" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_PlSpeciesName"
                                        Binding="{Binding PlSpeciesName}"
                                        CanUserSort="False"
                                        Tag="PlSpeciesName" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Subspecies"
                                        Binding="{Binding Subspecies}"
                                        CanUserSort="False"
                                        Tag="Subspecies" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Divers"
                                        Binding="{Binding Divers}"
                                        CanUserSort="False"
                                        Tag="Divers" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_SpeciesgroupName"
                                        Binding="{Binding SpeciesgroupId}"
                                        DisplayMemberPath="SpeciesgroupFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList, Mode=OneWay}" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelPlSpecies"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="PlSpeciesDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderPlSpecies" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock
                                                    x:Uid="TextBlock_General"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        Style="{StaticResource CaptionTextBlockStyle}"
                                                        Text="{x:Bind ViewModel.PlSpeciesSelected.Tbl66Genusses.GenusName, Mode=OneWay}" />
                                                    <TextBlock
                                                        Margin="2,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Style="{StaticResource CaptionTextBlockStyle}"
                                                        Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesName, Mode=OneWay}" />
                                                    <TextBlock
                                                        Margin="2,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Style="{StaticResource CaptionTextBlockStyle}"
                                                        Text="{x:Bind ViewModel.PlSpeciesSelected.Subspecies, Mode=OneWay}" />
                                                    <TextBlock
                                                        Margin="2,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Style="{StaticResource CaptionTextBlockStyle}"
                                                        Text="{x:Bind ViewModel.PlSpeciesSelected.Divers, Mode=OneWay}" />
                                                </StackPanel>
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="PlSpeciesId"
                                                x:Uid="TextBox_PlSpeciesId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="GenusCombo"
                                                x:Uid="ComboBox_GenusName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="GenusName"
                                                ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList}"
                                                RelativePanel.RightOf="PlSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.PlSpeciesSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="GenusId" />
                                            <TextBox
                                                x:Name="PlSpeciesName"
                                                x:Uid="TextBox_PlSpeciesName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="GenusCombo"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlSpeciesSubspecies"
                                                x:Uid="TextBox_Subspecies"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlSpeciesName"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Subspecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlSpeciesDivers"
                                                x:Uid="TextBox_Divers"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlSpeciesSubspecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Divers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SpeciesgroupCombo"
                                                x:Uid="ComboBox_SpeciesgroupFullName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="SpeciesgroupFullName"
                                                ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="PlSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.PlSpeciesSelected.SpeciesgroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="SpeciesgroupId" />
                                            <CheckBox
                                                x:Name="ValidCheckPlSpecies"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="0,35,-50,0"
                                                VerticalAlignment="Bottom"
                                                Content="Valid"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="PlSpeciesId"
                                                RelativePanel.RightOf="SpeciesgroupCombo" />
                                            <TextBox
                                                x:Name="ValidYearTextPlSpecies"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                CornerRadius="3"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="PlSpeciesId"
                                                RelativePanel.RightOf="ValidCheckPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecificationExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Specification" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="AuthorTextPlSpecies"
                                                x:Uid="TextBox_Author"
                                                Width="870"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                CharacterCasing="Upper"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AuthorYearTextPlSpecies"
                                                x:Uid="TextBox_AuthorYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlantLengthTextPlSpecies"
                                                x:Uid="TextBox_PlantLength"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                CornerRadius="3"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorYearTextPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlantLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BasinHeightTextPlSpecies"
                                                x:Uid="TextBox_BasinHeight"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                CornerRadius="3"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlantLengthTextPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.BasinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImporterTextPlSpecies"
                                                x:Uid="TextBox_Importer"
                                                Width="1040"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AuthorTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Importer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImportingYearTextPlSpecies"
                                                x:Uid="TextBox_ImportingYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="AuthorTextPlSpecies"
                                                RelativePanel.RightOf="ImporterTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.ImportingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="TradeNamePlSpecies"
                                                x:Uid="TextBox_TradeName"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ImporterTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.TradeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoSpeciesPlSpecies"
                                                x:Uid="TextBox_MemoSpecies"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TradeNamePlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoSpecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="TechnikExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Technik" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="Difficult1CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult1"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="Difficult2CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult2"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult1CheckPlSpecies" />
                                            <CheckBox
                                                x:Name="Difficult3CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult3"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult2CheckPlSpecies" />
                                            <CheckBox
                                                x:Name="Difficult4CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult4"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult3CheckPlSpecies" />
                                            <TextBox
                                                x:Name="Ph1TextPlSpecies"
                                                x:Uid="TextBox_Ph1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Ph1, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Ph2TextPlSpecies"
                                                x:Uid="TextBox_Ph2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Ph1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Ph2, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp1TextPlSpecies"
                                                x:Uid="TextBox_Temp1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Ph2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Temp1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp2TextPlSpecies"
                                                x:Uid="TextBox_Temp2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Temp1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Temp2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness1TextPlSpecies"
                                                x:Uid="TextBox_Hardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Temp2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Hardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness2TextPlSpecies"
                                                x:Uid="TextBox_Hardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Hardness1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Hardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness1TextPlSpecies"
                                                x:Uid="TextBox_CarboHardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Hardness2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.CarboHardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness2TextPlSpecies"
                                                x:Uid="TextBox_CarboHardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="CarboHardness1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.CarboHardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoTechPlSpecies"
                                                x:Uid="TextBox_MemoTech"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Ph1TextPlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoTech, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="CultureExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Culture" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoCulturePlSpecies"
                                                x:Uid="TextBox_MemoCulture"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoCulture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="ReproductionExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Reproduction" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoReproductionPlSpecies"
                                                x:Uid="TextBox_MemoReproduction"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoReproduction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BuiltExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Built" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBuiltPlSpecies"
                                                x:Uid="TextBox_MemoBuilt"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoBuilt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoColorPlSpecies"
                                                x:Uid="TextBox_MemoColor"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoBuiltPlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="GlobalExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Global" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoGlobalPlSpecies"
                                                x:Uid="TextBox_MemoGlobal"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoGlobal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="PlSpeciesCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewPlSpecies">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderPlSpecies.IsExpanded" Value="True" />
                                        <Setter Target="SpecificationExpanderPlSpecies.IsExpanded" Value="True" />
                                        <Setter Target="TechnikExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="HusbandryExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="BreedingExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="BuiltExpanderPlSpecies.IsExpanded" Value="False" />
                                        <Setter Target="GlobalExpanderPlSpecies.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2   FK3  aktuell  -->

                <!--  Part 2  FK4  aktuell  -->

                <!--  Part 4  TK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Names" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="NameLayoutRoot">
                        <TextBlock
                            x:Name="NameDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="NameDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="NameDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.NameDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="NameCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="NameDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveNameCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteNameCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.NameSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.NameCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.NameStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewName), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddNameCommand}"
                                ToolTipService.ToolTip="New Name">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyNameCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.NameSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshNameServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="NameDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridName"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuName}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.NameItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.NameSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_NameId"
                                        Binding="{Binding NameId}"
                                        CanUserSort="False"
                                        Tag="NameId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_NameName"
                                        Binding="{Binding NameName}"
                                        CanUserSort="True"
                                        Tag="NameName" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Language"
                                        Binding="{Binding Language}"
                                        Tag="Language" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelName"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="NameDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="NameId"
                                        x:Uid="TextBox_NameId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.NameSelected.NameId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="NameName"
                                        x:Uid="TextBox_NameName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="NameId"
                                        Text="{x:Bind ViewModel.NameSelected.NameName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="LanguageCombo"
                                        x:Uid="ComboBox_Language"
                                        Width="120"
                                        Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                        PlaceholderText="Pick a Language"
                                        RelativePanel.RightOf="NameName"
                                        SelectedValue="{x:Bind ViewModel.NameSelected.Language, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <x:String>GER</x:String>
                                        <x:String>ENG</x:String>
                                        <x:String>FRE</x:String>
                                        <x:String>SPA</x:String>
                                    </ComboBox>
                                    <CheckBox
                                        x:Name="ValidCheckName"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="0,35,-50,0"
                                        IsChecked="{x:Bind ViewModel.NameSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="LanguageCombo" />
                                    <TextBox
                                        x:Name="ValidYearTextName"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckName"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.NameSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoName"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="NameName"
                                        Text="{x:Bind ViewModel.NameSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoName"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="75"
                                        MaxWidth="1300"
                                        MaxHeight="300"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoName"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.NameSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="NameCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewName">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderName.IsExpanded" Value="True" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 4   TK2  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Images" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="ImageLayoutRoot">
                        <TextBlock
                            x:Name="ImageDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="ImageDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="ImageDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.ImageDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="ImageCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="ImageDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonChange"
                                Command="{x:Bind ViewModel.ChangeImageCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ImageResizer.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveImageCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteImageCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ImageSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.ImageCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.ImageStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewImage), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddImageCommand}"
                                ToolTipService.ToolTip="New Image">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyImageCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ImageSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshImageServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="ImageDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridGImage"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuImage}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.ImageItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.ImageSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ImageId"
                                        Binding="{Binding ImageId}"
                                        CanUserSort="False"
                                        Tag="ImageId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ImageMimeType"
                                        Binding="{Binding ImageMimeType}"
                                        Tag="ImageMimeType" />
                                    <controls:DataGridTemplateColumn x:Uid="DataGridTemplateColumn_Image">
                                        <controls:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                                    <Image
                                                        Width="22"
                                                        Height="22"
                                                        Margin="{StaticResource SmallLeftMargin}"
                                                        Source="{Binding Filestream, Converter={StaticResource ResourceKey=ImageSourceConverter}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </controls:DataGridTemplateColumn.CellTemplate>
                                    </controls:DataGridTemplateColumn>
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Info"
                                        Binding="{Binding Info}"
                                        Tag="Info" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelImage"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="ImageDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="ImageId"
                                        x:Uid="TextBox_ImageId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.ImageSelected.ImageId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="ImageMimeTypeCombo"
                                        x:Uid="ComboBox_ImageMimeType"
                                        Width="150"
                                        Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                                        PlaceholderText="Pick a mime type"
                                        RelativePanel.RightOf="ImageId"
                                        SelectedValue="{x:Bind ViewModel.ImageSelected.ImageMimeType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <x:String>jpg</x:String>
                                        <x:String>png</x:String>
                                        <x:String>bmp</x:String>
                                        <x:String>tif</x:String>
                                        <x:String>tiff</x:String>
                                        <x:String>gif</x:String>
                                        <x:String>ico</x:String>
                                        <x:String>jpeg</x:String>
                                        <x:String>wmf</x:String>
                                        <x:String>wmv</x:String>
                                        <x:String>mpg</x:String>
                                        <x:String>mp4</x:String>
                                        <x:String>avi</x:String>
                                        <x:String>mov</x:String>
                                        <x:String>swf</x:String>
                                        <x:String>flv</x:String>
                                    </ComboBox>
                                    <CheckBox
                                        x:Name="ValidCheckImage"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.ImageSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="ImageMimeTypeCombo" />
                                    <TextBox
                                        x:Name="ValidYearTextImage"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckImage"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.ImageSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextShotDate"
                                        x:Uid="TextBox_ShotDate"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidYearTextImage"
                                        Text="{x:Bind ViewModel.ImageSelected.ShotDate, Converter={StaticResource ResourceKey=DateConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <!--<DatePicker
                                    x:Name="DpShotDate"
                                    Width="300"
                                    Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                                    Date="{x:Bind ViewModel.ImageSelected.ShotDate, Converter={StaticResource ResourceKey=DateConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                    <TextBox
                                        x:Name="InfoImage"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="ImageId"
                                        Text="{x:Bind ViewModel.ImageSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SelectedPathImage"
                                        x:Uid="TextBox_SelectedPath"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoImage"
                                        Text="{x:Bind ViewModel.SelectedPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TabView
                                        x:Name="TabViewImage"
                                        MinHeight="475"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        Background="LightBlue"
                                        IsAddTabButtonVisible="False"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SelectedPathImage">
                                        <TabView.TabItems>
                                            <TabViewItem Header="Image" IsClosable="False">
                                                <Image
                                                    Name="Image1"
                                                    Margin="5"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Opacity="1"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="SelectedPathImage"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Source="{x:Bind ViewModel.ImageSelected.Filestream, Converter={StaticResource ResourceKey=ImageSourceConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Stretch="Uniform" />
                                            </TabViewItem>
                                        </TabView.TabItems>
                                    </TabView>

                                    <!--<TabView
                                    x:Name="TabViewImage"
                                    MinHeight="475"
                                    Background="LightBlue"
                                    IsAddTabButtonVisible="False">
                                    <TabView.TabItems>
                                    <TabViewItem Header="Image" IsClosable="False">
                                    <StackPanel>
                                    <Slider
                                    x:Name="ZoomSlider"
                                    Width="400"
                                    Margin="20,10,0,0"
                                    HorizontalAlignment="Left"
                                    Header="Zoom"
                                    IsEnabled="True"
                                    Maximum="{x:Bind ScrollViewerImage.MaxZoomFactor, Mode=OneWay}"
                                    Minimum="{x:Bind ScrollViewerImage.MinZoomFactor, Mode=OneWay}"
                                    ValueChanged="ZoomSlider_ValueChanged"
                                    Value="1" />
                                    <Border Name="Border1">
                                    <ScrollViewer
                                    x:Name="ScrollViewerImage"
                                    Width="500"
                                    Height="470"
                                    HorizontalScrollBarVisibility="Auto"
                                    HorizontalScrollMode="Enabled"
                                    IsTabStop="True"
                                    IsVerticalScrollChainingEnabled="True"
                                    ManipulationCompleted="ScrollViewerImage_ManipulationCompleted"
                                    VerticalScrollBarVisibility="Auto"
                                    VerticalScrollMode="Enabled"
                                    ZoomMode="Enabled">

                                    -->
                                    <!--<Image Source="ms-appx:///Assets/SampleMedia/cliff.jpg" AutomationProperties.Name="cliff" Stretch="None"
                                    HorizontalAlignment="Left" VerticalAlignment="Top"/>-->
                                    <!--
                                    <Image
                                    Name="Image1"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Opacity="1"
                                    RenderTransformOrigin="0.5,0.5"
                                    Source="{x:Bind ViewModel.ImageSelected.Filestream, Converter={StaticResource ResourceKey=ImageSourceConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Stretch="None" />
                                    </ScrollViewer>
                                    </Border>
                                    </StackPanel>
                                    </TabViewItem>
                                    </TabView.TabItems>

                                    </TabView>-->
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="ImageCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewImage">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderImage.IsExpanded" Value="True" />
                                        <Setter Target="DataExpanderImage.IsExpanded" Value="False" />
                                        <Setter Target="VideoExpanderImage.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 4   TK3  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Synonyms" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="SynonymLayoutRoot">
                        <TextBlock
                            x:Name="SynonymDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="SynonymDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="SynonymDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.SynonymDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="SynonymCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="SynonymDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveSynonymCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteSynonymCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.SynonymSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.SynonymCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.SynonymStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewSynonym), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddSynonymCommand}"
                                ToolTipService.ToolTip="New Synonym">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopySynonymCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.SynonymSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshSynonymServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="SynonymDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridSynonym"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuSynonym}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.SynonymItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.SynonymSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_SynonymId"
                                        Binding="{Binding SynonymId}"
                                        CanUserSort="False"
                                        Tag="SynonymId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_SynonymName"
                                        Binding="{Binding SynonymName}"
                                        CanUserSort="True"
                                        Tag="SynonymName" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Author"
                                        Binding="{Binding Author}"
                                        Tag="Author" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_AuthorYear"
                                        Binding="{Binding AuthorYear}"
                                        Tag="AuthorYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelSynonym"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="SynonymDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="SynonymId"
                                        x:Uid="TextBox_SynonymId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.SynonymSelected.SynonymId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="SynonymName"
                                        x:Uid="TextBox_SynonymName"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="SynonymId"
                                        Text="{x:Bind ViewModel.SynonymSelected.SynonymName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox
                                        x:Name="ValidCheckSynonym"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="0,28,-50,0"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.SynonymSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="SynonymName" />
                                    <TextBox
                                        x:Name="ValidYearTextSynonym"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckSynonym"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.SynonymSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextSynonym"
                                        x:Uid="TextBox_Author"
                                        Width="872"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SynonymId"
                                        Text="{x:Bind ViewModel.SynonymSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorYearTextSynonym"
                                        x:Uid="TextBox_AuthorYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.Below="SynonymId"
                                        RelativePanel.RightOf="AuthorTextSynonym"
                                        Text="{x:Bind ViewModel.SynonymSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoSynonym"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="AuthorTextSynonym"
                                        Text="{x:Bind ViewModel.SynonymSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoSynonym"
                                        x:Uid="TextBox_Memo"
                                        Height="200"
                                        MinWidth="1120"
                                        MaxWidth="1300"
                                        MaxHeight="300"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoSynonym"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.SynonymSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SynonymCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 4   TK4  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_Geographics" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="GeographicLayoutRoot">
                        <TextBlock
                            x:Name="GeographicDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="GeographicDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="GeographicDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.GeographicDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="GeographicCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="GeographicDatasetCountText">
                            <!--<AppBarButton
                            x:Uid="AppBarButtonChange"
                            Command="{x:Bind ViewModel.ChangeGeographicCommand}"
                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                            <AppBarButton.Icon>
                            <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ImageResizer.png" />
                            </AppBarButton.Icon>
                            </AppBarButton>-->
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveGeographicCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteGeographicCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.GeographicSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.GeographicCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.GeographicStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewGeographic), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddGeographicCommand}"
                                ToolTipService.ToolTip="New Geographic">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyGeographicCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.GeographicSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshGeographicServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="GeographicDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridGeographic"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuGeographic}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.GeographicItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.GeographicSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_GeographicId"
                                        Binding="{Binding GeographicId}"
                                        CanUserSort="False"
                                        Tag="ImageId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Continent"
                                        Binding="{Binding Continent}"
                                        Tag="Continent" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Country"
                                        Binding="{Binding Country}"
                                        Tag="Country" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Info"
                                        Binding="{Binding Info}"
                                        Tag="Info" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelGeographic"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="GeographicDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderGeographic" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.GeographicSelected.GeographicId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="GeographicId"
                                                x:Uid="TextBox_GeographicId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.GeographicSelected.GeographicId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="ComboContinent"
                                                x:Uid="ComboBox_Continent"
                                                Width="250"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                PlaceholderText="Pick a Continent"
                                                RelativePanel.RightOf="GeographicId"
                                                SelectedValue="{x:Bind ViewModel.GeographicSelected.Continent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <x:String>Africa</x:String>
                                                <x:String>Antarctica</x:String>
                                                <x:String>Asia</x:String>
                                                <x:String>Australia</x:String>
                                                <x:String>Central/South America</x:String>
                                                <x:String>Europe</x:String>
                                                <x:String>North America/Caribbean</x:String>
                                            </ComboBox>
                                            <ComboBox
                                                x:Name="ComboCountry"
                                                x:Uid="ComboBox_Country"
                                                MinWidth="250"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="Name"
                                                ItemsSource="{x:Bind ViewModel.TblCountriesAllList}"
                                                PlaceholderText="Pick a Country"
                                                RelativePanel.RightOf="ComboContinent"
                                                SelectedValue="{x:Bind ViewModel.GeographicSelected.Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="Name" />
                                            <CheckBox
                                                x:Name="ValidCheckGeographic"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="0,28,-50,0"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.GeographicSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="ComboCountry" />
                                            <TextBox
                                                x:Name="ValidYearTextGeographic"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                CornerRadius="3"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="ValidCheckGeographic"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.GeographicSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AddressGeographic"
                                                x:Uid="TextBox_Address"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="GeographicId"
                                                Text="{x:Bind ViewModel.GeographicSelected.Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="InfoGeographic"
                                                x:Uid="TextBox_Info"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AddressGeographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="MapExpanderGeographic">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Map" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <Border Width="1100" Height="400">
                                                <Image
                                                    x:Name="ImageGeographic"
                                                    Source="ms-appx:///Assets/Aquarium3.png"
                                                    Stretch="Uniform" />
                                            </Border>
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="DataExpanderGeographic">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Data" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="AuthorTextGeographic"
                                                x:Uid="TextBox_Author"
                                                MinWidth="860"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                CharacterCasing="Upper"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.GeographicSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AuthorYearTextGeographic"
                                                x:Uid="TextBox_AuthorYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorTextGeographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="HttpGeographic"
                                                x:Uid="TextBox_Http"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AuthorTextGeographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Http, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoGeographic"
                                                x:Uid="TextBox_Memo"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="HttpGeographic"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.GeographicSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="LatitudeExpanderGeographic">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Latitude" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="ZoomLevelGeographic"
                                                x:Uid="TextBox_ZoomLevel"
                                                MinWidth="250"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                Text="{x:Bind ViewModel.GeographicSelected.ZoomLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Latitude1Geographic"
                                                x:Uid="TextBox_Latitude1"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ZoomLevelGeographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Latitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Longitude1Geographic"
                                                x:Uid="TextBox_Longitude1"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="ZoomLevelGeographic"
                                                RelativePanel.RightOf="Latitude1Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Longitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Latitude2Geographic"
                                                x:Uid="TextBox_Latitude2"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="ZoomLevelGeographic"
                                                RelativePanel.RightOf="Longitude1Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Latitude1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Longitude2Geographic"
                                                x:Uid="TextBox_Longitude2"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="ZoomLevelGeographic"
                                                RelativePanel.RightOf="Latitude2Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Longitude1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Latitude3Geographic"
                                                x:Uid="TextBox_Latitude3"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Latitude1Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Latitude2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Longitude3Geographic"
                                                x:Uid="TextBox_Longitude3"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Latitude1Geographic"
                                                RelativePanel.RightOf="Latitude3Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Longitude2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Latitude4Geographic"
                                                x:Uid="TextBox_Latitude4"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Latitude1Geographic"
                                                RelativePanel.RightOf="Longitude3Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Latitude3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Longitude4Geographic"
                                                x:Uid="TextBox_Longitude4"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Latitude1Geographic"
                                                RelativePanel.RightOf="Latitude4Geographic"
                                                Text="{x:Bind ViewModel.GeographicSelected.Longitude3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="GeographicCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewGeographic">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderGeographic.IsExpanded" Value="True" />
                                        <Setter Target="MapExpanderGeographic.IsExpanded" Value="False" />
                                        <Setter Target="DataExpanderGeographic.IsExpanded" Value="False" />
                                        <Setter Target="LatitudeExpanderGeographic.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 7  -->

                <TabViewItem x:Uid="TabViewItem_References" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <TabView
                        Background="DarkGray"
                        IsAddTabButtonVisible="False"
                        SelectedIndex="{x:Bind ViewModel.SelectedMainDetailRefTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TabView.TabItems>

                            <TabViewItem x:Uid="TabViewItem_Ref_Experts" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceExpertLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceExpertDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceExpertDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceExpertDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceExpertDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceExpertCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceExpertDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceExpertCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceExpertCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceExpertSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceExpertCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceExpertStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceExpert), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceExpertCommand}"
                                            ToolTipService.ToolTip="New Reference Expert">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceExpertCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceExpertSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceExpertServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceExpertDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceExpert"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceExpert}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceExpertItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceExpertSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefExpertName"
                                                    Binding="{Binding RefExpertId}"
                                                    DisplayMemberPath="RefExpertName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90ExpertsAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceExpert"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceExpertDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdExpert"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceExpertId"
                                                    x:Uid="TextBox_ReferenceExpertId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdExpert"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.RefExpertId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceExpertCombo"
                                                    x:Uid="ComboBox_RefExpertName"
                                                    MinWidth="200"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefExpertName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90ExpertsAllList}"
                                                    RelativePanel.RightOf="ReferenceExpertId"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceExpertSelected.RefExpertId), BindBack=ViewModel.ReferenceExpertSelected.SetRefExpertId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefExpertId" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceExpert"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceExpertSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceExpertCombo" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceExpert"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceExpert"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="InfoReferenceExpert"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdExpert"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceExpert"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceExpert"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceExpertSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceExpertCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>

                            <TabViewItem x:Uid="TabViewItem_Ref_Sources" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceSourceLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceSourceDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceSourceDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceSourceDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceSourceDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceSourceCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceSourceDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceSourceCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceSourceCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceSourceSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceSourceCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceSourceStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceSource), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceSourceCommand}"
                                            ToolTipService.ToolTip="New Reference Source">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceSourceCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceSourceSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceSourceServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceSourceDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceSource"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceSource}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceSourceItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceSourceSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefSourceName"
                                                    Binding="{Binding RefSourceId}"
                                                    DisplayMemberPath="RefSourceName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90SourcesAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceSource"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceSourceDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdSource"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceSourceId"
                                                    x:Uid="TextBox_ReferenceSourceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdSource"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.RefSourceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceSource"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceSourceSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceSourceId" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceSource"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    CornerRadius="3"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceSource"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceSourceCombo"
                                                    x:Uid="ComboBox_RefSourceName"
                                                    MinWidth="500"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefSourceName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90SourcesAllList}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdSource"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceSourceSelected.RefSourceId), BindBack=ViewModel.ReferenceSourceSelected.SetRefSourceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefSourceId" />
                                                <TextBox
                                                    x:Name="InfoReferenceSource"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceSourceCombo"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceSource"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceSource"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceSourceSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceSourceCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>

                            <TabViewItem x:Uid="TabViewItem_Ref_Authors" IsClosable="False">
                                <TabViewItem.IconSource>
                                    <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                                </TabViewItem.IconSource>
                                <RelativePanel x:Name="ReferenceAuthorLayoutRoot">
                                    <TextBlock
                                        x:Name="ReferenceAuthorDatasetText"
                                        x:Uid="TextBlock_DataSetCount"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Style="{StaticResource DatasetTitleStyle}" />
                                    <TextBlock
                                        x:Name="ReferenceAuthorDatasetCountText"
                                        Width="50"
                                        RelativePanel.RightOf="ReferenceAuthorDatasetText"
                                        Style="{StaticResource DatasetTitleStyle}"
                                        Text="{x:Bind ViewModel.ReferenceAuthorDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CommandBar
                                        x:Name="ReferenceAuthorCommandBar"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.RightOf="ReferenceAuthorDatasetCountText">
                                        <AppBarButton
                                            x:Uid="AppBarButtonSave"
                                            Command="{x:Bind ViewModel.SaveReferenceAuthorCommand}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonDelete"
                                            Command="{x:Bind ViewModel.DeleteReferenceAuthorCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceAuthorSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCancel"
                                            Click="{x:Bind ViewModel.ReferenceAuthorCancelEditsAsync}"
                                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                                        <AppBarSeparator />
                                        <AppBarButton
                                            x:Uid="AppBarButtonEdit"
                                            Click="{x:Bind ViewModel.ReferenceAuthorStartEdit}"
                                            IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewReferenceAuthor), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonAdd"
                                            Command="{x:Bind ViewModel.AddReferenceAuthorCommand}"
                                            ToolTipService.ToolTip="New Reference Author">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonCopy"
                                            Command="{x:Bind ViewModel.CopyReferenceAuthorCommand}"
                                            IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ReferenceAuthorSelected), Mode=OneWay}">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                        <AppBarButton
                                            x:Uid="AppBarButtonSync"
                                            Command="{x:Bind ViewModel.RefreshReferenceAuthorServerCommand}"
                                            ToolTipService.ToolTip="Sync with server">
                                            <AppBarButton.Icon>
                                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </CommandBar>

                                    <Grid
                                        Margin="{StaticResource SmallTopMargin}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.AlignRightWithPanel="True"
                                        RelativePanel.Below="ReferenceAuthorDatasetText">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="2" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <controls:DataGrid
                                            x:Name="DataGridReferenceAuthor"
                                            MaxHeight="175"
                                            AutoGenerateColumns="False"
                                            BorderThickness="0"
                                            CanUserReorderColumns="False"
                                            CanUserResizeColumns="False"
                                            ContextFlyout="{StaticResource ContextMenuReferenceAuthor}"
                                            GridLinesVisibility="Horizontal"
                                            IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                            ItemsSource="{x:Bind ViewModel.ReferenceAuthorItems, Mode=OneWay}"
                                            SelectedItem="{x:Bind ViewModel.ReferenceAuthorSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectionMode="Single">
                                            <controls:DataGrid.Columns>
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ReferenceId"
                                                    Binding="{Binding ReferenceId}"
                                                    CanUserSort="False"
                                                    Tag="ReferenceId" />
                                                <controls:DataGridComboBoxColumn
                                                    x:Uid="DataGridComboBoxColumn_RefAuthorName"
                                                    MaxWidth="800"
                                                    Binding="{Binding RefAuthorId}"
                                                    DisplayMemberPath="RefAuthorName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90AuthorsAllList, Mode=OneWay}" />
                                                <controls:DataGridCheckBoxColumn
                                                    x:Uid="DataGridCheckBoxColumn_Valid"
                                                    Binding="{Binding Valid}"
                                                    Tag="Valid" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_ValidYear"
                                                    Binding="{Binding ValidYear}"
                                                    Tag="ValidYear" />
                                                <controls:DataGridTextColumn
                                                    x:Uid="DataGridTextColumn_Info"
                                                    Binding="{Binding Info}"
                                                    Tag="Info" />
                                            </controls:DataGrid.Columns>
                                        </controls:DataGrid>
                                        <ProgressBar
                                            Grid.Row="1"
                                            Margin="{StaticResource SmallTopMargin}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            IsIndeterminate="True"
                                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                                        <ScrollViewer
                                            x:Name="DetailPanelReferenceAuthor"
                                            Grid.Row="2"
                                            Height="Auto"
                                            Margin="0,5,0,0"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.Below="ReferenceAuthorDatasetText"
                                            VerticalScrollBarVisibility="Auto"
                                            VerticalScrollMode="Auto">
                                            <RelativePanel Margin="8,0,0,8">
                                                <TextBox
                                                    x:Name="ReferenceIdAuthor"
                                                    x:Uid="TextBox_ReferenceId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.ReferenceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="ReferenceAuthorId"
                                                    x:Uid="TextBox_ReferenceAuthorId"
                                                    MinWidth="110"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    IsReadOnly="True"
                                                    RelativePanel.RightOf="ReferenceIdAuthor"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.RefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <CheckBox
                                                    x:Name="ValidCheckReferenceAuthor"
                                                    x:Uid="CheckBox_Valid"
                                                    Width="80"
                                                    Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                    VerticalAlignment="Bottom"
                                                    IsChecked="{x:Bind ViewModel.ReferenceAuthorSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    RelativePanel.RightOf="ReferenceAuthorId" />
                                                <TextBox
                                                    x:Name="ValidYearTextReferenceAuthor"
                                                    x:Uid="TextBox_ValidYear"
                                                    Width="70"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    CornerRadius="3"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.RightOf="ValidCheckReferenceAuthor"
                                                    Style="{StaticResource BodyTextBoxStyle}"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox
                                                    x:Name="ReferenceAuthorCombo"
                                                    x:Uid="ComboBox_RefAuthorName"
                                                    MinWidth="800"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    DisplayMemberPath="RefAuthorName"
                                                    ItemsSource="{x:Bind ViewModel.Tbl90AuthorsAllList}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceIdAuthor"
                                                    SelectedValue="{x:Bind helpers:CastHelper.NullableIntToObjCast(ViewModel.ReferenceAuthorSelected.RefAuthorId), BindBack=ViewModel.ReferenceAuthorSelected.SetRefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedValuePath="RefAuthorId" />
                                                <TextBox
                                                    x:Name="InfoReferenceAuthor"
                                                    x:Uid="TextBox_Info"
                                                    MinWidth="1120"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    HorizontalAlignment="Stretch"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="ReferenceAuthorCombo"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox
                                                    x:Name="MemoReferenceAuthor"
                                                    x:Uid="TextBox_Memo"
                                                    MinWidth="1120"
                                                    MinHeight="100"
                                                    MaxWidth="1300"
                                                    MaxHeight="150"
                                                    Margin="{StaticResource XSmallTopRightMargin}"
                                                    AcceptsReturn="True"
                                                    IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="InfoReferenceAuthor"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Text="{x:Bind ViewModel.ReferenceAuthorSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextWrapping="Wrap" />
                                            </RelativePanel>
                                        </ScrollViewer>
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                            </VisualState>
                                            <VisualState>
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="ReferenceAuthorCommandBar.DefaultLabelPosition" Value="Bottom" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </RelativePanel>
                            </TabViewItem>
                        </TabView.TabItems>
                    </TabView>
                </TabViewItem>

                <TabViewItem x:Uid="TabViewItem_Comments" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowRight.png" />
                    </TabViewItem.IconSource>
                    <RelativePanel x:Name="CommentLayoutRoot">
                        <TextBlock
                            x:Name="CommentDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="CommentDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="CommentDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.CommentDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="CommentCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="CommentDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveCommentCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteCommentCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.CommentSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.CommentCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.CommentStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewComment), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddCommentCommand}"
                                ToolTipService.ToolTip="New Comment">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyCommentCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.CommentSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshCommentServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="CommentDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridComment"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuComment}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.CommentItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.CommentSelected, Mode=TwoWay}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_CommentId"
                                        Binding="{Binding CommentId}"
                                        CanUserSort="False"
                                        Tag="CommentId" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Info"
                                        Binding="{Binding Info}"
                                        Tag="Info" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelComment"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="CommentDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="CommentId"
                                        x:Uid="TextBox_CommentId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.CommentSelected.CommentId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox
                                        x:Name="ValidCheckComment"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.CommentSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="CommentId" />
                                    <TextBox
                                        x:Name="ValidYearTextComment"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckComment"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.CommentSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="InfoComment"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="ValidYearTextComment"
                                        Text="{x:Bind ViewModel.CommentSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="MemoComment"
                                        x:Uid="TextBox_Memo"
                                        MinWidth="1120"
                                        MinHeight="100"
                                        MaxWidth="1300"
                                        MaxHeight="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        AcceptsReturn="True"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoComment"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{x:Bind ViewModel.CommentSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="CommentCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>
            </TabView.TabItems>
        </TabView>
    </Grid>
</Page>

