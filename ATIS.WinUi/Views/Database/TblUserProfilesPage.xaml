<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<Page
    x:Class="ATIS.WinUi.Views.Database.TblUserProfilesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ATIS.WinUi.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:ATIS.WinUi.Helpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:drawing="using:System.Drawing"
    xmlns:helpers="using:ATIS.WinUi.Helpers"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Background="Transparent"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">


    <!--  UserProfilesPage.xaml  Skriptdatum:  26.04.2023  10:32  -->


    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />
        <converters:DateConverter x:Key="DateConverter" />

        <MenuFlyout x:Key="ContextMenuUserProfile">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_UserProfile" Command="{x:Bind ViewModel.SaveUserProfileCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_UserProfile" Command="{x:Bind ViewModel.AddUserProfileCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_UserProfile" Command="{x:Bind ViewModel.CopyUserProfileCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_UserProfile" Command="{x:Bind ViewModel.DeleteUserProfileCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_UserProfile" Command="{x:Bind ViewModel.RefreshUserProfileServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Page.Resources>

    <Grid x:Name="UserProfileMainRoot">

        <TabView Background="LightSkyBlue" IsAddTabButtonVisible="False">
            <TabView.TabItems>

                <!--  Part 2   FK1  aktuell  -->


                <!--  Part 2  FK2    aktuell  -->



                <!--  Part 2  FK3    aktuell  -->

                <!--  Part 2  FK4    aktuell  -->

                <!--  Part 2  Main   aktuell  -->


                <TabViewItem x:Uid="TabViewItem_UserProfiles" IsClosable="False">
                    <RelativePanel x:Name="UserProfileLayoutRoot">
                        <TextBlock
                            x:Name="UserProfileDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="UserProfileDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="UserProfileDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.UserProfileDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="UserProfileCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.LeftOf="UserProfileSearchAutoSuggestBox"
                            RelativePanel.RightOf="UserProfileDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveUserProfileCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteUserProfileCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.UserProfileSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.UserProfileCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.UserProfileStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewUserProfile), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddUserProfileCommand}"
                                ToolTipService.ToolTip="New UserProfile">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyUserProfileCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.UserProfileSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshUserProfileServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <AutoSuggestBox
                            Name="UserProfileSearchAutoSuggestBox"
                            x:Uid="AutoSuggestBox_Search"
                            Width="250"
                            Margin="{StaticResource XSmallLeftTopRightMargin}"
                            CornerRadius="2"
                            Loaded="UserProfileSearchAutoSuggestBox_OnLoaded"
                            RelativePanel.AlignRightWithPanel="True"
                            Text="{x:Bind ViewModel.SearchEmail, Mode=TwoWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetUserProfilesByEmailOrIdCommand, Mode=OneWay}" InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.QueryIcon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Search.png" />
                            </AutoSuggestBox.QueryIcon>
                        </AutoSuggestBox>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="UserProfileDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="UserProfileDatagrid"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                CanUserSortColumns="True"
                                ContextFlyout="{StaticResource ContextMenuUserProfile}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.UserProfileItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.UserProfileSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_UserProfileId"
                                        Binding="{Binding UserProfileId}"
                                        CanUserSort="False"
                                        Tag="UserProfileId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_UserProfileEmail"
                                        Binding="{Binding Email}"
                                        CanUserSort="True"
                                        Tag="UserProfileName" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Role"
                                        Binding="{Binding Role}"
                                        Tag="Role" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Flag"
                                        Binding="{Binding Flag}"
                                        Tag="Flag" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_FirstName"
                                        Binding="{Binding FirstName}"
                                        Tag="FirstName" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_LastName"
                                        Binding="{Binding LastName}"
                                        Tag="LastName" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />

                            <ScrollViewer
                                x:Name="DetailPanelUserProfile"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="UserProfileDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderUserProfile" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.UserProfileSelected.Email, Mode=OneWay}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="UserProfileEmail"
                                                x:Uid="TextBox_UserProfileEmail"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="RoleCombo"
                                                x:Uid="ComboBox_Role"
                                                Width="150"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                PlaceholderText="Pick a Role"
                                                RelativePanel.RightOf="UserProfileEmail"
                                                SelectedValue="{x:Bind ViewModel.UserProfileSelected.Role, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <x:String>Administrator</x:String>
                                                <x:String>Developer</x:String>
                                                <x:String>Biologist</x:String>
                                                <x:String>Zoologist</x:String>
                                                <x:String>User</x:String>
                                            </ComboBox>
                                            <CheckBox
                                                x:Name="FlagCheckUserProfile"
                                                x:Uid="CheckBox_Flag"
                                                Width="80"
                                                Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.UserProfileSelected.Flag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="RoleCombo" />
                                            <TextBox
                                                x:Name="PasswordTextUserProfile"
                                                x:Uid="TextBox_Password"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="UserProfileEmail"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ColourUserProfile"
                                                x:Uid="TextBox_Colour"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="PasswordTextUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Colour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="DetailsExpanderUserProfile">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Details" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <ComboBox
                                                x:Name="TitleCombo"
                                                x:Uid="ComboBox_Title"
                                                Width="150"
                                                Margin="{StaticResource SmallLeftTopRightBottomMargin}"
                                                PlaceholderText="Pick a Title"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                SelectedValue="{x:Bind ViewModel.UserProfileSelected.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <x:String>Dr.</x:String>
                                                <x:String>Prof.</x:String>
                                                <x:String>Dipl.-Ing.</x:String>
                                                <x:String>Ing. grad</x:String>
                                                <x:String>Dr. Ing</x:String>
                                            </ComboBox>
                                            <TextBox
                                                x:Name="FirstNameUserProfile"
                                                x:Uid="TextBox_FirstName"
                                                MinWidth="250"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="TitleCombo"
                                                Text="{x:Bind ViewModel.UserProfileSelected.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="LastNameUserProfile"
                                                x:Uid="TextBox_LastName"
                                                MinWidth="250"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FirstNameUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                            <ComboBox
                                                x:Name="GenderCombo"
                                                x:Uid="ComboBox_Gender"
                                                Width="150"
                                                Margin="{StaticResource SmallLeftTopRightBottomMargin}"
                                                PlaceholderText="Pick a Gender"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TitleCombo"
                                                SelectedValue="{x:Bind ViewModel.UserProfileSelected.Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <x:String>Female</x:String>
                                                <x:String>Male</x:String>
                                            </ComboBox>
                                            <TextBox
                                                x:Name="BirthDateUserProfile"
                                                x:Uid="TextBox_BirthDate"
                                                MinWidth="100"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                RelativePanel.Below="TitleCombo"
                                                RelativePanel.RightOf="GenderCombo"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.UserProfileSelected.BirthDate, Converter={StaticResource ResourceKey=DateConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <!--<DatePicker
                                                x:Name="DpBirthDate"
                                                Width="150"
                                                RelativePanel.RightOf="GenderCombo"
                                                RelativePanel.Below="TitleCombo"
                                                Margin="20,5,5,5"
                                                HorizontalAlignment="Left"
                                                Date="{x:Bind ViewModel.UserProfileSelected.BirthDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                            <ComboBox
                                                x:Name="ComboCountry"
                                                x:Uid="ComboBox_Country"
                                                MinWidth="250"
                                                Margin="{StaticResource SmallLeftTopRightBottomMargin}"
                                                DisplayMemberPath="Name"
                                                ItemsSource="{x:Bind ViewModel.TblCountriesAllList}"
                                                PlaceholderText="Pick a Country"
                                                RelativePanel.Below="TitleCombo"
                                                RelativePanel.RightOf="BirthDateUserProfile"
                                                SelectedValue="{x:Bind ViewModel.UserProfileSelected.Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="Name" />
                                            <TextBox
                                                x:Name="PostcodeUserProfile"
                                                x:Uid="TextBox_Postcode"
                                                MinWidth="100"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                CornerRadius="3"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="TitleCombo"
                                                RelativePanel.RightOf="ComboCountry"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Postcode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CityUserProfile"
                                                x:Uid="TextBox_City"
                                                MinWidth="250"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="TitleCombo"
                                                RelativePanel.RightOf="PostcodeUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Street1UserProfile"
                                                x:Uid="TextBox_Street"
                                                MinWidth="500"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="GenderCombo"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Street1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Street2UserProfile"
                                                x:Uid="TextBox_Street"
                                                MinWidth="500"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="GenderCombo"
                                                RelativePanel.RightOf="Street1UserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Street1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="TelUserProfile"
                                                x:Uid="TextBox_Tel"
                                                MinWidth="100"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Street1UserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Tel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MobilUserProfile"
                                                x:Uid="TextBox_Mobil"
                                                MinWidth="100"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Street1UserProfile"
                                                RelativePanel.RightOf="TelUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Mobil, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FaxUserProfile"
                                                x:Uid="TextBox_Fax"
                                                MinWidth="100"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Street1UserProfile"
                                                RelativePanel.RightOf="MobilUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Fax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="HomePageUrlUserProfile"
                                                x:Uid="TextBox_HomePageUrl"
                                                MinWidth="200"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Street1UserProfile"
                                                RelativePanel.RightOf="FaxUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.HomePageUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BusinessUserProfile"
                                                x:Uid="TextBox_Business"
                                                MinWidth="300"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Street1UserProfile"
                                                RelativePanel.RightOf="HomePageUrlUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Business, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CompanyUserProfile"
                                                x:Uid="TextBox_Company"
                                                MinWidth="150"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TelUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Company, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="SignatureUserProfile"
                                                x:Uid="TextBox_Signature"
                                                MinWidth="100"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="TelUserProfile"
                                                RelativePanel.RightOf="CompanyUserProfile"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Signature, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="ImageMimeTypeCombo"
                                                x:Uid="ComboBox_ImageMimeType"
                                                Width="200"
                                                Margin="{StaticResource SmallLeftTopRightBottomMargin}"
                                                PlaceholderText="Pick a mime type"
                                                RelativePanel.Below="TelUserProfile"
                                                RelativePanel.RightOf="SignatureUserProfile"
                                                SelectedValue="{x:Bind ViewModel.UserProfileSelected.ImageMimeType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <x:String>jpg</x:String>
                                                <x:String>png</x:String>
                                                <x:String>bmp</x:String>
                                                <x:String>tif</x:String>
                                                <x:String>tiff</x:String>
                                                <x:String>gif</x:String>
                                                <x:String>ico</x:String>
                                                <x:String>jpeg</x:String>
                                                <x:String>wmf</x:String>
                                                <x:String>wmv</x:String>
                                                <x:String>mpg</x:String>
                                                <x:String>mp4</x:String>
                                                <x:String>avi</x:String>
                                                <x:String>mov</x:String>
                                                <x:String>swf</x:String>
                                                <x:String>flv</x:String>
                                            </ComboBox>
                                            <TextBox
                                                x:Name="FilestreamIdUserProfile"
                                                x:Uid="TextBox_FilestreamId"
                                                MinWidth="250"
                                                Margin="{StaticResource SmallLeftTopMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="TelUserProfile"
                                                RelativePanel.RightOf="ImageMimeTypeCombo"
                                                Text="{x:Bind ViewModel.UserProfileSelected.FilestreamId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <CheckBox
                                                x:Name="MailNewsletterCheckName"
                                                x:Uid="CheckBox_MailNewsletter"
                                                MinWidth="200"
                                                Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                IsChecked="{x:Bind ViewModel.UserProfileSelected.MailNewsletter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="TelUserProfile"
                                                RelativePanel.RightOf="FilestreamIdUserProfile" />
                                            <CheckBox
                                                x:Name="MaulHtmlCheckName"
                                                x:Uid="CheckBox_MaulHtml"
                                                MinWidth="150"
                                                Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                IsChecked="{x:Bind ViewModel.UserProfileSelected.MaulHtml, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="TelUserProfile"
                                                RelativePanel.RightOf="MailNewsletterCheckName" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="MemoExpanderUserProfile">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Memo" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox
                                                x:Name="MemoUserProfile"
                                                x:Uid="TextBox_Memo"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="75"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="InfoUserProfile"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.UserProfileSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="UserProfileCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewUserProfile">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderUserProfile.IsExpanded" Value="True" />
                                        <Setter Target="DetailsExpanderUserProfile.IsExpanded" Value="False" />
                                        <Setter Target="MemoExpanderUserProfile.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2   FK3  aktuell  -->

                <!--  Part 2  FK4  aktuell  -->

                <!--  Part 4  TK1  aktuell  -->

                <!--  Part 4   TK2  aktuell  -->


                <!--  Part 4   TK3  aktuell  -->



                <!--  Part 4   TK4  aktuell  -->



                <!--  Part 7  -->


            </TabView.TabItems>
        </TabView>
    </Grid>
</Page>
