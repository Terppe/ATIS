<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<Page
    x:Class="ATIS.WinUi.Views.Database.Tbl90RefAuthorsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ATIS.WinUi.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:ATIS.WinUi.Helpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:drawing="using:System.Drawing"
    xmlns:helpers="using:ATIS.WinUi.Helpers"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Background="Transparent"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">


    <!--  RefAuthorsPage.xaml  Skriptdatum: 24.04.2023  10:32  -->


    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />

        <MenuFlyout x:Key="ContextMenuRefAuthor">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_RefAuthor" Command="{x:Bind ViewModel.SaveRefAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_RefAuthor" Command="{x:Bind ViewModel.AddRefAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_RefAuthor" Command="{x:Bind ViewModel.CopyRefAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_RefAuthor" Command="{x:Bind ViewModel.DeleteRefAuthorCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_RefAuthor" Command="{x:Bind ViewModel.RefreshRefAuthorServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Page.Resources>

    <Grid x:Name="RefAuthorMainRoot">

        <TabView Background="LightSkyBlue" IsAddTabButtonVisible="False">
            <TabView.TabItems>

                <!--  Part 2   FK1  aktuell  -->


                <!--  Part 2  FK2    aktuell  -->



                <!--  Part 2  FK3    aktuell  -->

                <!--  Part 2  FK4    aktuell  -->

                <!--  Part 2  Main   aktuell  -->


                <TabViewItem x:Uid="TabViewItem_RefAuthors" IsClosable="False">
                    <RelativePanel x:Name="RefAuthorLayoutRoot">
                        <TextBlock
                            x:Name="RefAuthorDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="RefAuthorDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="RefAuthorDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.RefAuthorDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="RefAuthorCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.LeftOf="RefAuthorSearchAutoSuggestBox"
                            RelativePanel.RightOf="RefAuthorDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveRefAuthorCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteRefAuthorCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.RefAuthorSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.RefAuthorCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.RefAuthorStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewRefAuthor), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddRefAuthorCommand}"
                                ToolTipService.ToolTip="New RefAuthor">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyRefAuthorCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.RefAuthorSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshRefAuthorServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <AutoSuggestBox
                            Name="RefAuthorSearchAutoSuggestBox"
                            x:Uid="AutoSuggestBox_Search"
                            Width="250"
                            Margin="{StaticResource XSmallLeftTopRightMargin}"
                            CornerRadius="2"
                            Loaded="RefAuthorSearchAutoSuggestBox_OnLoaded"
                            RelativePanel.AlignRightWithPanel="True"
                            Text="{x:Bind ViewModel.SearchRefAuthorName, Mode=TwoWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetRefAuthorsByNameOrIdCommand, Mode=OneWay}" InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.QueryIcon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Search.png" />
                            </AutoSuggestBox.QueryIcon>
                        </AutoSuggestBox>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="RefAuthorDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="RefAuthorDatagrid"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                CanUserSortColumns="True"
                                ContextFlyout="{StaticResource ContextMenuRefAuthor}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.RefAuthorItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.RefAuthorSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_RefAuthorId"
                                        Binding="{Binding RefAuthorId}"
                                        CanUserSort="False"
                                        Tag="RefAuthorId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_RefAuthorName"
                                        Binding="{Binding RefAuthorName}"
                                        CanUserSort="True"
                                        Tag="RefAuthorName" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelRefAuthor"
                                Grid.Row="2"
                                Height="Auto"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="RefAuthorDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderRefAuthor" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.RefAuthorSelected.RefAuthorName, Mode=OneWay}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="RefAuthorId"
                                                x:Uid="TextBox_RefAuthorId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.RefAuthorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="RefAuthorName"
                                                x:Uid="TextBox_RefAuthorName"
                                                MinWidth="300"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="RefAuthorId"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.RefAuthorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <CheckBox
                                                x:Name="ValidCheckRefAuthor"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                VerticalAlignment="Bottom"
                                                Content="Valid"
                                                IsChecked="{x:Bind ViewModel.RefAuthorSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="RefAuthorName" />
                                            <TextBox
                                                x:Name="ValidYearTextRefAuthor"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="ValidCheckRefAuthor"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="IsbnTextRefAuthor"
                                                x:Uid="TextBox_ISBN"
                                                Width="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="ValidYearTextRefAuthor"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.ISBN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ArticelTitleTextRefAuthor"
                                                x:Uid="TextBox_ArticelTitle"
                                                MinWidth="800"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="RefAuthorId"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.ArticelTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BookNameTextRefAuthor"
                                                x:Uid="TextBox_BookName"
                                                Width="950"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ArticelTitleTextRefAuthor"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.BookName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PageTextRefAuthor"
                                                x:Uid="TextBox_Page"
                                                Width="160"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="ArticelTitleTextRefAuthor"
                                                RelativePanel.RightOf="BookNameTextRefAuthor"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.Page1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PublisherRefAuthor"
                                                x:Uid="TextBox_Publisher"
                                                MinWidth="800"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="BookNameTextRefAuthor"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.Publisher, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PublicationPlaceRefAuthor"
                                                x:Uid="TextBox_PublicationPlace"
                                                MinWidth="310"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="BookNameTextRefAuthor"
                                                RelativePanel.RightOf="PublisherRefAuthor"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.PublicationPlace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="NotesRefAuthor"
                                                x:Uid="TextBox_Notes"
                                                MinWidth="1120"
                                                MinHeight="50"
                                                MaxWidth="1300"
                                                MaxHeight="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="PublisherRefAuthor"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="InfoRefAuthor"
                                                x:Uid="TextBox_Info"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="NotesRefAuthor"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="MemoExpanderRefAuthor">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Memo" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox
                                                x:Name="MemoRefAuthor"
                                                x:Uid="TextBox_Memo"
                                                MinWidth="1120"
                                                MinHeight="50"
                                                MaxWidth="1300"
                                                MaxHeight="200"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="InfoRefAuthor"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.RefAuthorSelected.Memo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </StackPanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="RefAuthorCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="NewRefAuthor">
                                    <VisualState.Setters>
                                        <Setter Target="GeneralExpanderRefAuthor.IsExpanded" Value="True" />
                                        <Setter Target="MemoExpanderRefAuthor.IsExpanded" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2   FK3  aktuell  -->

                <!--  Part 2  FK4  aktuell  -->

                <!--  Part 4  TK1  aktuell  -->

                <!--  Part 4   TK2  aktuell  -->


                <!--  Part 4   TK3  aktuell  -->



                <!--  Part 4   TK4  aktuell  -->



                <!--  Part 7  -->


                <!--  Part 8.1  TK1  Connected  -->

                <!--  Part 8.2  TK2  Connected  -->

                <!--  Part 8.3  TK3  Connected  -->

                <!--  Part 8.4  TK4  Connected  -->

                <!--  Part 11  -->

                <!--  Part 12  -->

                <!--  Part 13  -->

                <!--  Part 14  -->
            </TabView.TabItems>
        </TabView>
    </Grid>
</Page>
