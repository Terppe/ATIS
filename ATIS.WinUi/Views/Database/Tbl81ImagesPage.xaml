<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<Page
    x:Class="ATIS.WinUi.Views.Database.Tbl81ImagesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ATIS.WinUi.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:ATIS.WinUi.Helpers.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:drawing="using:System.Drawing"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Background="Transparent"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">


    <!--  ImagesPage.xaml  Skriptdatum: 21.04.2023  10:32  -->


    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />
        <converters:IntToStringConverter x:Key="IntConverter" />
        <converters:DoubleToStringConverter x:Key="DoubleConverter" />
        <converters:ImageSourceConverter x:Key="ImageSourceConverter" />
        <converters:DateConverter x:Key="DateConverter" />

        <MenuFlyout x:Key="ContextMenuFiSpecies">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_FiSpecies" Command="{x:Bind ViewModel.SaveFiSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_FiSpecies" Command="{x:Bind ViewModel.RefreshFiSpeciesServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuPlSpecies">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_PlSpecies" Command="{x:Bind ViewModel.SavePlSpeciesCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_PlSpecies" Command="{x:Bind ViewModel.RefreshPlSpeciesServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="ContextMenuImage">
            <MenuFlyoutItem x:Uid="MenuFlyout_Save_Image" Command="{x:Bind ViewModel.SaveImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Add_Image" Command="{x:Bind ViewModel.AddImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Copy_Image" Command="{x:Bind ViewModel.CopyImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Delete_Image" Command="{x:Bind ViewModel.DeleteImageCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="MenuFlyout_Refresh_Image" Command="{x:Bind ViewModel.RefreshImageServerCommand}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Page.Resources>

    <Grid x:Name="ImageMainRoot">

        <TabView
            x:Name="ImageTabView"
            Background="LightSkyBlue"
            IsAddTabButtonVisible="False"
            SelectedIndex="{x:Bind ViewModel.SelectedMainDetailTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionChanged="TabView_OnSelectionChanged">
            <TabView.TabItems>

                <!--  Part 2   FK1  aktuell  -->

                <TabViewItem x:Uid="TabViewItem_FiSpeciesses" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowLeft.png" />
                    </TabViewItem.IconSource>

                    <RelativePanel x:Name="FiSpeciesLayoutRoot">
                        <TextBlock
                            x:Name="FiSpeciesDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="FiSpeciesDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="FiSpeciesDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.FiSpeciesDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="FiSpeciesCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="FiSpeciesDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveFiSpeciesCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.FiSpeciesCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.FiSpeciesStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="FiSpeciesDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <ListView
                                x:Name="Tbl69FiSpeciessesListView"
                                ItemsSource="{x:Bind ViewModel.FiSpeciesItems}"
                                SelectedItem="{x:Bind ViewModel.FiSpeciesSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />

                            <ScrollViewer
                                x:Name="DetailPanelFiSpecies"
                                Height="Auto"
                                Margin="0,5,0,0"
                                ContextFlyout="{StaticResource ContextMenuFiSpecies}"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="FiSpeciesDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderFiSpecies" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.FiSpeciesSelected.FiSpeciesFullName, Mode=OneWay}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="FiSpeciesId"
                                                x:Uid="TextBox_FiSpeciesId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.FiSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="GenusCombo"
                                                x:Uid="ComboBox_GenusName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="GenusName"
                                                ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList}"
                                                RelativePanel.RightOf="FiSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.FiSpeciesSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="GenusId" />
                                            <TextBox
                                                x:Name="FiSpeciesName"
                                                x:Uid="TextBox_FiSpeciesName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="GenusCombo"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.FiSpeciesName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FiSpeciesSubspecies"
                                                x:Uid="TextBox_Subspecies"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FiSpeciesName"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Subspecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FiSpeciesDivers"
                                                x:Uid="TextBox_Divers"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FiSpeciesSubspecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Divers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SpeciesgroupCombo"
                                                x:Uid="ComboBox_SpeciesgroupFullName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="SpeciesgroupFullName"
                                                ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="FiSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.FiSpeciesSelected.SpeciesgroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="SpeciesgroupId" />
                                            <CheckBox
                                                x:Name="ValidCheckFiSpecies"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="FiSpeciesId"
                                                RelativePanel.RightOf="SpeciesgroupCombo" />
                                            <TextBox
                                                x:Name="ValidYearTextFiSpecies"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="FiSpeciesId"
                                                RelativePanel.RightOf="ValidCheckFiSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecificationExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Specification" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="AuthorTextFiSpecies"
                                                x:Uid="TextBox_Author"
                                                Width="670"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                CharacterCasing="Upper"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AuthorYearTextFiSpecies"
                                                x:Uid="TextBox_AuthorYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="FishLengthTextFiSpecies"
                                                x:Uid="TextBox_FishLength"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorYearTextFiSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.FishLength, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BasinLengthTextFiSpecies"
                                                x:Uid="TextBox_BasinLength"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="FishLengthTextFiSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.BasinLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImporterTextFiSpecies"
                                                x:Uid="TextBox_Importer"
                                                Width="1040"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AuthorTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Importer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImportingYearTextFiSpecies"
                                                x:Uid="TextBox_ImportingYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="AuthorTextFiSpecies"
                                                RelativePanel.RightOf="ImporterTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.ImportingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="TradeNameFiSpecies"
                                                x:Uid="TextBox_TradeName"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ImporterTextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.TradeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoSpeciesFiSpecies"
                                                x:Uid="TextBox_MemoSpecies"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TradeNameFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoSpecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="FoodExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Food" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="KarnivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Karnivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Karnivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="HerbivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Herbivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Herbivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="KarnivoreCheckFiSpecies" />
                                            <CheckBox
                                                x:Name="LimnivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Limnivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Limnivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="HerbivoreCheckFiSpecies" />
                                            <CheckBox
                                                x:Name="OmnivoreCheckFiSpecies"
                                                x:Uid="CheckBox_Omnivore"
                                                Width="80"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Omnivore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="LimnivoreCheckFiSpecies" />
                                            <TextBox
                                                x:Name="MemoFoodsFiSpecies"
                                                x:Uid="TextBox_MemoFoods"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="OmnivoreCheckFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoFoods, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="TechnikExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Technik" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="Difficult1CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult1"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="Difficult2CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult2"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult1CheckFiSpecies" />
                                            <CheckBox
                                                x:Name="Difficult3CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult3"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult2CheckFiSpecies" />
                                            <CheckBox
                                                x:Name="Difficult4CheckFiSpecies"
                                                x:Uid="CheckBox_Difficult4"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.FiSpeciesSelected.Difficult4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult3CheckFiSpecies" />
                                            <TextBox
                                                x:Name="Ph1TextFiSpecies"
                                                x:Uid="TextBox_Ph1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Ph1, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Ph2TextFiSpecies"
                                                x:Uid="TextBox_Ph2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Ph1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Ph2, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp1TextFiSpecies"
                                                x:Uid="TextBox_Temp1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Ph2TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Temp1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp2TextFiSpecies"
                                                x:Uid="TextBox_Temp2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Temp1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Temp2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness1TextFiSpecies"
                                                x:Uid="TextBox_Hardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Temp2TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Hardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness2TextFiSpecies"
                                                x:Uid="TextBox_Hardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Hardness1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.Hardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness1TextFiSpecies"
                                                x:Uid="TextBox_CarboHardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="Hardness2TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.CarboHardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness2TextFiSpecies"
                                                x:Uid="TextBox_CarboHardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckFiSpecies"
                                                RelativePanel.RightOf="CarboHardness1TextFiSpecies"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.CarboHardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoTechFiSpecies"
                                                x:Uid="TextBox_MemoTech"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Ph1TextFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoTech, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="HusbandryExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Husbandry" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoHusbandryFiSpecies"
                                                x:Uid="TextBox_MemoHusbandry"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoHusbandry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BreedingExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Breeding" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBreedingFiSpecies"
                                                x:Uid="TextBox_MemoBreeding"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoBreeding, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BuiltExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Built" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBuiltFiSpecies"
                                                x:Uid="TextBox_MemoBuilt"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoBuilt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoColorFiSpecies"
                                                x:Uid="TextBox_MemoColor"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoBuiltFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoSozialFiSpecies"
                                                x:Uid="TextBox_MemoSozial"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoColorFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoSozial, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoDomorphismFiSpecies"
                                                x:Uid="TextBox_MemoDomorphism"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoSozialFiSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoDomorphism, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecialExpanderFiSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Special" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoSpecialFiSpecies"
                                                x:Uid="TextBox_MemoSpecial"
                                                MinWidth="1120"
                                                MinHeight="75"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.FiSpeciesSelected.MemoSpecial, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="FiSpeciesCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>


                <!--  Part 2  FK2    aktuell  -->


                <TabViewItem x:Uid="TabViewItem_PlSpeciesses" IsClosable="False">
                    <TabViewItem.IconSource>
                        <BitmapIconSource ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ArrowLeft.png" />
                    </TabViewItem.IconSource>

                    <RelativePanel x:Name="PlSpeciesLayoutRoot">
                        <TextBlock
                            x:Name="PlSpeciesDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DatasetTitleStyle}" />
                        <TextBlock
                            x:Name="PlSpeciesDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="PlSpeciesDatasetText"
                            Style="{StaticResource DatasetTitleStyle}"
                            Text="{x:Bind ViewModel.PlSpeciesDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="PlSpeciesCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.RightOf="PlSpeciesDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SavePlSpeciesCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.PlSpeciesCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.PlSpeciesStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>

                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="PlSpeciesDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <ListView
                                x:Name="Tbl72PlSpeciessesListView"
                                ItemsSource="{x:Bind ViewModel.PlSpeciesItems}"
                                SelectedItem="{x:Bind ViewModel.PlSpeciesSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />

                            <ScrollViewer
                                x:Name="DetailPanelPlSpecies"
                                Height="Auto"
                                Margin="0,5,0,0"
                                ContextFlyout="{StaticResource ContextMenuPlSpecies}"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="PlSpeciesDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="Expander">
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Expander x:Name="GeneralExpanderPlSpecies" IsExpanded="True">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_General" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesFullName, Mode=OneWay}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel Margin="8,0,0,8">
                                            <TextBox
                                                x:Name="PlSpeciesId"
                                                x:Uid="TextBox_PlSpeciesId"
                                                MinWidth="110"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="True"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="GenusCombo1"
                                                x:Uid="ComboBox_GenusName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="GenusName"
                                                ItemsSource="{x:Bind ViewModel.Tbl66GenussesAllList}"
                                                RelativePanel.RightOf="PlSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.PlSpeciesSelected.GenusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="GenusId" />

                                            <TextBox
                                                x:Name="PlSpeciesName"
                                                x:Uid="TextBox_PlSpeciesName"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="GenusCombo1"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlSpeciesName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlSpeciesSubspecies"
                                                x:Uid="TextBox_Subspecies"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlSpeciesName"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Subspecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlSpeciesDivers"
                                                x:Uid="TextBox_Divers"
                                                MinWidth="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlSpeciesSubspecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Divers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SpeciesgroupCombo1"
                                                x:Uid="ComboBox_SpeciesgroupFullName"
                                                MinWidth="200"
                                                Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                                DisplayMemberPath="SpeciesgroupFullName"
                                                ItemsSource="{x:Bind ViewModel.Tbl68SpeciesgroupsAllList}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="PlSpeciesId"
                                                SelectedValue="{x:Bind ViewModel.PlSpeciesSelected.SpeciesgroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedValuePath="SpeciesgroupId" />
                                            <CheckBox
                                                x:Name="ValidCheckPlSpecies"
                                                x:Uid="CheckBox_Valid"
                                                Width="80"
                                                Margin="0,35,-50,0"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.Below="PlSpeciesId"
                                                RelativePanel.RightOf="SpeciesgroupCombo1" />
                                            <TextBox
                                                x:Name="ValidYearTextPlSpecies"
                                                x:Uid="TextBox_ValidYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="PlSpeciesId"
                                                RelativePanel.RightOf="ValidCheckPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecificationExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Specification" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="AuthorTextPlSpecies"
                                                x:Uid="TextBox_Author"
                                                Width="670"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                CharacterCasing="Upper"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="AuthorYearTextPlSpecies"
                                                x:Uid="TextBox_AuthorYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.AuthorYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="PlantLengthTextPlSpecies"
                                                x:Uid="TextBox_PlantLength"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="AuthorYearTextPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.PlantLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="BasinHeightTextPlSpecies"
                                                x:Uid="TextBox_BasinHeight"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.RightOf="PlantLengthTextPlSpecies"
                                                Style="{StaticResource BodyTextBoxStyle}"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.BasinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImporterTextPlSpecies"
                                                x:Uid="TextBox_Importer"
                                                Width="1040"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="AuthorTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Importer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="ImportingYearTextPlSpecies"
                                                x:Uid="TextBox_ImportingYear"
                                                Width="70"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="AuthorTextPlSpecies"
                                                RelativePanel.RightOf="ImporterTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.ImportingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="TradeNamePlSpecies"
                                                x:Uid="TextBox_TradeName"
                                                MinWidth="1120"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="ImporterTextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.TradeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoSpeciesPlSpecies"
                                                x:Uid="TextBox_MemoSpecies"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="TradeNamePlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoSpecies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="TechnikExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Technik" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <CheckBox
                                                x:Name="Difficult1CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult1"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.AlignLeftWithPanel="True" />
                                            <CheckBox
                                                x:Name="Difficult2CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult2"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult1CheckPlSpecies" />
                                            <CheckBox
                                                x:Name="Difficult3CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult3"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult2CheckPlSpecies" />
                                            <CheckBox
                                                x:Name="Difficult4CheckPlSpecies"
                                                x:Uid="CheckBox_Difficult4"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                VerticalAlignment="Bottom"
                                                IsChecked="{x:Bind ViewModel.PlSpeciesSelected.Difficult4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                RelativePanel.RightOf="Difficult3CheckPlSpecies" />
                                            <TextBox
                                                x:Name="Ph1TextPlSpecies"
                                                x:Uid="TextBox_Ph1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Ph1, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Ph2TextPlSpecies"
                                                x:Uid="TextBox_Ph2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Ph1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Ph2, Converter={StaticResource ResourceKey=DoubleConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp1TextPlSpecies"
                                                x:Uid="TextBox_Temp1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Ph2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Temp1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Temp2TextPlSpecies"
                                                x:Uid="TextBox_Temp2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Temp1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Temp2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness1TextPlSpecies"
                                                x:Uid="TextBox_Hardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Temp2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Hardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="Hardness2TextPlSpecies"
                                                x:Uid="TextBox_Hardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Hardness1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.Hardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness1TextPlSpecies"
                                                x:Uid="TextBox_CarboHardness1"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="Hardness2TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.CarboHardness1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="CarboHardness2TextPlSpecies"
                                                x:Uid="TextBox_CarboHardness2"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="Difficult1CheckPlSpecies"
                                                RelativePanel.RightOf="CarboHardness1TextPlSpecies"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.CarboHardness2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="MemoTechPlSpecies"
                                                x:Uid="TextBox_MemoTech"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallTopRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.Below="Ph1TextPlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoTech, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="CultureExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Culture" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoCulturePlSpecies"
                                                x:Uid="TextBox_MemoCulture"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoCulture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="ReproductionExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Reproduction" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoReproductionPlSpecies"
                                                x:Uid="TextBox_MemoReproduction"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoReproduction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="BuiltExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Built" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoBuiltPlSpecies"
                                                x:Uid="TextBox_MemoBuilt"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoBuilt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                            <TextBox
                                                x:Name="MemoColorPlSpecies"
                                                x:Uid="TextBox_MemoColor"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="100"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.Below="MemoBuiltPlSpecies"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                    <Expander x:Name="SpecialExpanderPlSpecies">
                                        <Expander.Header>
                                            <Grid>
                                                <TextBlock x:Uid="TextBlock_Special" Style="{ThemeResource SubtitleTextBlockStyle}" />
                                            </Grid>
                                        </Expander.Header>
                                        <RelativePanel>
                                            <TextBox
                                                x:Name="MemoGlobalPlSpecies"
                                                x:Uid="TextBox_MemoGlobal"
                                                MinWidth="1120"
                                                MaxWidth="1300"
                                                MaxHeight="150"
                                                Margin="{StaticResource XSmallRightMargin}"
                                                AcceptsReturn="True"
                                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                                RelativePanel.AlignLeftWithPanel="True"
                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                Text="{x:Bind ViewModel.PlSpeciesSelected.MemoGlobal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap" />
                                        </RelativePanel>
                                    </Expander>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="PlSpeciesCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>


                <!--  Part 2  FK3    aktuell  -->

                <!--  Part 2  FK4    aktuell  -->

                <!--  Part 2  Main   aktuell  -->


                <TabViewItem x:Uid="TabViewItem_Images" IsClosable="False">
                    <RelativePanel x:Name="ImageLayoutRoot">
                        <TextBlock
                            x:Name="ImageDatasetText"
                            x:Uid="TextBlock_DataSetCount"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource DetailSubTitleStyle}" />
                        <TextBlock
                            x:Name="ImageDatasetCountText"
                            Width="50"
                            RelativePanel.RightOf="ImageDatasetText"
                            Style="{StaticResource DetailSubTitleStyle}"
                            Text="{x:Bind ViewModel.ImageDataSetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CommandBar
                            x:Name="ImageCommandBar"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            RelativePanel.LeftOf="ImageSearchAutoSuggestBox"
                            RelativePanel.RightOf="ImageDatasetCountText">
                            <AppBarButton
                                x:Uid="AppBarButtonChange"
                                Command="{x:Bind ViewModel.ChangeImageCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/ImageResizer.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSave"
                                Command="{x:Bind ViewModel.SaveImageCommand}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Save.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonDelete"
                                Command="{x:Bind ViewModel.DeleteImageCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ImageSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Delete.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCancel"
                                Click="{x:Bind ViewModel.ImageCancelEditsAsync}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Cancel.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <AppBarSeparator />
                            <AppBarButton
                                x:Uid="AppBarButtonEdit"
                                Click="{x:Bind ViewModel.ImageStartEdit}"
                                IsEnabled="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Visibility="{x:Bind converters:NotConverter.CollapsedIf(ViewModel.IsNewImage), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Edit.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonAdd"
                                Command="{x:Bind ViewModel.AddImageCommand}"
                                ToolTipService.ToolTip="New Image">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Add.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonCopy"
                                Command="{x:Bind ViewModel.CopyImageCommand}"
                                IsEnabled="{x:Bind converters:NotConverter.IsNotNull(ViewModel.ImageSelected), Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Copy.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Uid="AppBarButtonSync"
                                Command="{x:Bind ViewModel.RefreshImageServerCommand}"
                                ToolTipService.ToolTip="Sync with server">
                                <AppBarButton.Icon>
                                    <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Refresh.png" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                        <AutoSuggestBox
                            Name="ImageSearchAutoSuggestBox"
                            x:Uid="AutoSuggestBox_Search"
                            Width="250"
                            Margin="{StaticResource XSmallLeftTopRightMargin}"
                            CornerRadius="2"
                            Loaded="ImageSearchAutoSuggestBox_OnLoaded"
                            PlaceholderText="Search Info or ID"
                            RelativePanel.AlignRightWithPanel="True"
                            Text="{x:Bind ViewModel.SearchImageInfoOrId, Mode=TwoWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetImagesByInfoOrIdCommand, Mode=OneWay}" InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.QueryIcon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="ms-appx:///Assets/Search.png" />
                            </AutoSuggestBox.QueryIcon>
                        </AutoSuggestBox>
                        <Grid
                            Margin="{StaticResource SmallTopMargin}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="ImageDatasetText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <controls:DataGrid
                                x:Name="DataGridGImage"
                                MaxHeight="175"
                                AutoGenerateColumns="False"
                                BorderThickness="0"
                                CanUserReorderColumns="False"
                                CanUserResizeColumns="False"
                                ContextFlyout="{StaticResource ContextMenuImage}"
                                GridLinesVisibility="Horizontal"
                                IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                ItemsSource="{x:Bind ViewModel.ImageItems, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.ImageSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Single">
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ImageId"
                                        Binding="{Binding ImageId}"
                                        CanUserSort="False"
                                        Tag="ImageId" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ImageMimeType"
                                        Binding="{Binding ImageMimeType}"
                                        Tag="ImageMimeType" />
                                    <controls:DataGridTemplateColumn x:Uid="DataGridTemplateColumn_Image">
                                        <controls:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                                    <Image
                                                        Width="22"
                                                        Height="22"
                                                        Margin="{StaticResource SmallLeftMargin}"
                                                        Source="{Binding Filestream, Converter={StaticResource ResourceKey=ImageSourceConverter}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </controls:DataGridTemplateColumn.CellTemplate>
                                    </controls:DataGridTemplateColumn>
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_FiSpeciesName"
                                        Binding="{Binding FiSpeciesId}"
                                        DisplayMemberPath="FiSpeciesFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl69FiSpeciessesAllList, Mode=OneWay}" />
                                    <controls:DataGridComboBoxColumn
                                        x:Uid="DataGridComboBoxColumn_PlSpeciesName"
                                        Binding="{Binding PlSpeciesId}"
                                        DisplayMemberPath="PlSpeciesFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl72PlSpeciessesAllList, Mode=OneWay}" />
                                    <controls:DataGridCheckBoxColumn
                                        x:Uid="DataGridCheckBoxColumn_Valid"
                                        Binding="{Binding Valid}"
                                        Tag="Valid" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_ValidYear"
                                        Binding="{Binding ValidYear}"
                                        Tag="ValidYear" />
                                    <controls:DataGridTextColumn
                                        x:Uid="DataGridTextColumn_Info"
                                        Binding="{Binding Info}"
                                        Tag="Info" />
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                            <ProgressBar
                                Grid.Row="1"
                                Margin="{StaticResource SmallTopMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                IsIndeterminate="True"
                                Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            <ScrollViewer
                                x:Name="DetailPanelImage"
                                Grid.Row="2"
                                Height="Auto"
                                Margin="0,5,0,0"
                                RelativePanel.AlignLeftWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.Below="ImageDatasetText"
                                VerticalScrollBarVisibility="Auto"
                                VerticalScrollMode="Auto">
                                <RelativePanel Margin="8,0,0,8">
                                    <TextBox
                                        x:Name="ImageId"
                                        x:Uid="TextBox_ImageId"
                                        MinWidth="110"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        IsReadOnly="True"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        Text="{x:Bind ViewModel.ImageSelected.ImageId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="ImageMimeTypeCombo"
                                        x:Uid="ComboBox_ImageMimeType"
                                        Width="150"
                                        Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                                        PlaceholderText="Pick a mime type"
                                        RelativePanel.RightOf="ImageId"
                                        SelectedValue="{x:Bind ViewModel.ImageSelected.ImageMimeType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <x:String>jpg</x:String>
                                        <x:String>png</x:String>
                                        <x:String>bmp</x:String>
                                        <x:String>tif</x:String>
                                        <x:String>tiff</x:String>
                                        <x:String>gif</x:String>
                                        <x:String>ico</x:String>
                                        <x:String>jpeg</x:String>
                                        <x:String>wmf</x:String>
                                        <x:String>wmv</x:String>
                                        <x:String>mpg</x:String>
                                        <x:String>mp4</x:String>
                                        <x:String>avi</x:String>
                                        <x:String>mov</x:String>
                                        <x:String>swf</x:String>
                                        <x:String>flv</x:String>
                                    </ComboBox>
                                    <CheckBox
                                        x:Name="ValidCheckImage"
                                        x:Uid="CheckBox_Valid"
                                        Width="80"
                                        Margin="{StaticResource SmallTopRightCheckBoxMargin}"
                                        VerticalAlignment="Bottom"
                                        IsChecked="{x:Bind ViewModel.ImageSelected.Valid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RelativePanel.RightOf="ImageMimeTypeCombo" />
                                    <TextBox
                                        x:Name="ValidYearTextImage"
                                        x:Uid="TextBox_ValidYear"
                                        Width="70"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        CornerRadius="3"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidCheckImage"
                                        Style="{StaticResource BodyTextBoxStyle}"
                                        Text="{x:Bind ViewModel.ImageSelected.ValidYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox
                                        x:Name="AuthorTextShotDate"
                                        x:Uid="TextBox_ShotDate"
                                        MinWidth="150"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        CharacterCasing="Upper"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.RightOf="ValidYearTextImage"
                                        Text="{x:Bind ViewModel.ImageSelected.ShotDate, Converter={StaticResource ResourceKey=DateConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <!--<DatePicker
                                        x:Name="DpShotDate"
                                        Width="300"
                                        Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                                        Date="{x:Bind ViewModel.ImageSelected.ShotDate, Converter={StaticResource ResourceKey=DateConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                    <TextBox
                                        x:Name="InfoImage"
                                        x:Uid="TextBox_Info"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="ImageId"
                                        Text="{x:Bind ViewModel.ImageSelected.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="FiSpeciesCombo"
                                        x:Uid="ComboBox_FiSpeciesName"
                                        MinWidth="300"
                                        Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                        DisplayMemberPath="FiSpeciesFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl69FiSpeciessesAllList}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="InfoImage"
                                        SelectedValue="{x:Bind ViewModel.ImageSelected.FiSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="FiSpeciesId" />
                                    <ComboBox
                                        x:Name="PlSpeciesCombo"
                                        x:Uid="ComboBox_PlSpeciesName"
                                        MinWidth="300"
                                        Margin="{StaticResource XSmallTopRightComboBoxMargin}"
                                        DisplayMemberPath="PlSpeciesFullName"
                                        ItemsSource="{x:Bind ViewModel.Tbl72PlSpeciessesAllList}"
                                        RelativePanel.Below="InfoImage"
                                        RelativePanel.RightOf="FiSpeciesCombo"
                                        SelectedValue="{x:Bind ViewModel.ImageSelected.PlSpeciesId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath="PlSpeciesId" />
                                    <TextBox
                                        x:Name="SelectedPathImage"
                                        x:Uid="TextBox_SelectedPath"
                                        MinWidth="1120"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        HorizontalAlignment="Stretch"
                                        IsReadOnly="{x:Bind converters:NotConverter.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="FiSpeciesCombo"
                                        Text="{x:Bind ViewModel.SelectedPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TabView
                                        x:Name="TabViewImage"
                                        MinHeight="475"
                                        Margin="{StaticResource XSmallTopRightMargin}"
                                        Background="LightBlue"
                                        IsAddTabButtonVisible="False"
                                        RelativePanel.AlignLeftWithPanel="True"
                                        RelativePanel.Below="SelectedPathImage">
                                        <TabView.TabItems>
                                            <TabViewItem Header="Image" IsClosable="False">
                                                <Image
                                                    Name="Image1"
                                                    Margin="5"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Opacity="1"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    RelativePanel.Below="SelectedPathImage"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Source="{x:Bind ViewModel.ImageSelected.Filestream, Converter={StaticResource ResourceKey=ImageSourceConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Stretch="Uniform" />
                                            </TabViewItem>
                                        </TabView.TabItems>
                                    </TabView>
                                </RelativePanel>
                            </ScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="ImageCommandBar.DefaultLabelPosition" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </RelativePanel>
                </TabViewItem>

                <!--  Part 2   FK3  aktuell  -->

                <!--  Part 2  FK4  aktuell  -->

                <!--  Part 4  TK1  aktuell  -->

                <!--  Part 4   TK2  aktuell  -->

                <!--  Part 4   TK3  aktuell  -->

                <!--  Part 4   TK4  aktuell  -->

                <!--  Part 7  -->

            </TabView.TabItems>
        </TabView>
    </Grid>
</Page>
